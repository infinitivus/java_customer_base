Index: src/main/java/com/project/infinitivus/customerbase/logic/system_file/settingsProgram.txt
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/logic/system_file/settingsProgram.txt b/src/main/java/com/project/infinitivus/customerbase/logic/system_file/settingsProgram.txt
deleted file mode 100644
--- a/src/main/java/com/project/infinitivus/customerbase/logic/system_file/settingsProgram.txt	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ /dev/null	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
@@ -1,2 +0,0 @@
-1
-2
Index: src/main/java/com/project/infinitivus/customerbase/logic/system_file/settingsDB.txt
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/logic/system_file/settingsDB.txt b/src/main/java/com/project/infinitivus/customerbase/logic/system_file/settingsDB.txt
deleted file mode 100644
--- a/src/main/java/com/project/infinitivus/customerbase/logic/system_file/settingsDB.txt	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ /dev/null	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
@@ -1,5 +0,0 @@
-1
-jdbc:mysql://localhost:3306/alexbase
-root
-admin
-tablealex
\ No newline at end of file
Index: src/main/java/com/project/infinitivus/customerbase/data/file/CreateDirectoryAndFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.file;\r\n\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.IOutputMessage;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\n\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class CreateDirectoryAndFile {\r\n    private final Path CREATE_DIRECTORY_LIBRARY = Paths.get(\"src\\\\main\\\\java\\\\com\"\r\n            + \"\\\\project\\\\infinitivus\\\\customerbase\\\\data\\\\file\\\\library\");\r\n    final String PERSON_LIBRARY_LINE = \"src\\\\main\\\\java\\\\com\\\\project\\\\\"\r\n            + \"infinitivus\\\\customerbase\\\\data\\\\file\\\\library\\\\person_list.txt\";\r\n    private final Path PERSON_LIBRARY = Paths.get(PERSON_LIBRARY_LINE);\r\n\r\n\r\n    public void createDirectory() {\r\n        IOutputMessage iOutputMessage = new OutputMessageColumn();\r\n        try {\r\n            if (!Files.exists(CREATE_DIRECTORY_LIBRARY)) {\r\n                Files.createDirectories(CREATE_DIRECTORY_LIBRARY);\r\n                iOutputMessage.outputMessage(\"createFile\", 1);\r\n                Files.createFile(PERSON_LIBRARY);\r\n                iOutputMessage.outputMessage(\"createFile\", 2);\r\n            }\r\n        } catch (IOException ex) {\r\n            Logger.getLogger(CreateDirectoryAndFile.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/file/CreateDirectoryAndFile.java b/src/main/java/com/project/infinitivus/customerbase/data/file/CreateDirectoryAndFile.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/file/CreateDirectoryAndFile.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/file/CreateDirectoryAndFile.java	(date 1641921238269)
@@ -10,6 +10,9 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
 public class CreateDirectoryAndFile {
     private final Path CREATE_DIRECTORY_LIBRARY = Paths.get("src\\main\\java\\com"
             + "\\project\\infinitivus\\customerbase\\data\\file\\library");
Index: src/main/java/com/project/infinitivus/customerbase/data/file/DeleteFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.file;\r\n\r\nimport com.project.infinitivus.customerbase.data.IDelete;\r\n\r\npublic class DeleteFile implements IDelete {\r\n\r\n    @Override\r\n    public void delete() {\r\n        new UpdateFile().update(0);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/file/DeleteFile.java b/src/main/java/com/project/infinitivus/customerbase/data/file/DeleteFile.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/file/DeleteFile.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/file/DeleteFile.java	(date 1641921238535)
@@ -2,6 +2,9 @@
 
 import com.project.infinitivus.customerbase.data.IDelete;
 
+/**
+ * @author infinitivus
+ */
 public class DeleteFile implements IDelete {
 
     @Override
Index: src/main/java/com/project/infinitivus/customerbase/data/file/InsertFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.file;\r\n\r\nimport com.project.infinitivus.customerbase.data.IInsert;\r\nimport com.project.infinitivus.customerbase.service.work_with_person.Person;\r\n\r\nimport java.io.BufferedWriter;\r\nimport java.io.FileWriter;\r\nimport java.io.IOException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class InsertFile extends CreateDirectoryAndFile implements IInsert {\r\n\r\n    @Override\r\n    public void insert(int numRec) {\r\n        try (BufferedWriter writer = new BufferedWriter(new FileWriter(PERSON_LIBRARY_LINE, true))) {\r\n            writer.write(Person.list.get(numRec).getSurname() + \":\"\r\n                    + Person.list.get(numRec).getName() + \":\"\r\n                    + Person.list.get(numRec).getPhone() + \":\"\r\n                    + Person.list.get(numRec).getEmail() + \":\"\r\n                    + Person.list.get(numRec).getBirthday() + \":\"\r\n                    + Person.list.get(numRec).getBrand() + \":\"\r\n                    + Person.list.get(numRec).getModel() + \":\"\r\n                    + Person.list.get(numRec).getVin() + \":\"\r\n                    + Person.list.get(numRec).getYear() + \":\"\r\n                    + Person.list.get(numRec).getLicensePlate() + \":\");\r\n        } catch (IOException ex) {\r\n            Logger.getLogger(InsertFile.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/file/InsertFile.java b/src/main/java/com/project/infinitivus/customerbase/data/file/InsertFile.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/file/InsertFile.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/file/InsertFile.java	(date 1641921237696)
@@ -9,6 +9,9 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
 public class InsertFile extends CreateDirectoryAndFile implements IInsert {
 
     @Override
Index: src/main/java/com/project/infinitivus/customerbase/data/file/UpdateFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.file;\r\n\r\nimport com.project.infinitivus.customerbase.data.IUpdate;\r\nimport com.project.infinitivus.customerbase.service.work_with_person.Person;\r\n\r\npublic class UpdateFile extends CreateDirectoryAndFile implements IUpdate {\r\n    @Override\r\n    public void update(int notUsed) {\r\n        new ClearFile().clear();\r\n        for (int i = 1; i < Person.list.size(); i++) {\r\n            new InsertFile().insert(i);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/file/UpdateFile.java b/src/main/java/com/project/infinitivus/customerbase/data/file/UpdateFile.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/file/UpdateFile.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/file/UpdateFile.java	(date 1641921238292)
@@ -3,6 +3,9 @@
 import com.project.infinitivus.customerbase.data.IUpdate;
 import com.project.infinitivus.customerbase.service.work_with_person.Person;
 
+/**
+ * @author infinitivus
+ */
 public class UpdateFile extends CreateDirectoryAndFile implements IUpdate {
     @Override
     public void update(int notUsed) {
Index: src/main/java/com/project/infinitivus/customerbase/data/IUpdate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data;\r\n\r\npublic interface IUpdate {\r\n    void update(int i);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/IUpdate.java b/src/main/java/com/project/infinitivus/customerbase/data/IUpdate.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/IUpdate.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/IUpdate.java	(date 1641921238234)
@@ -1,5 +1,8 @@
 package com.project.infinitivus.customerbase.data;
 
+/**
+ * @author infinitivus
+ */
 public interface IUpdate {
     void update(int i);
 }
Index: src/main/java/com/project/infinitivus/customerbase/data/IDelete.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data;\r\n\r\npublic interface IDelete {\r\n    void delete ();\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/IDelete.java b/src/main/java/com/project/infinitivus/customerbase/data/IDelete.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/IDelete.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/IDelete.java	(date 1641921237892)
@@ -1,5 +1,8 @@
 package com.project.infinitivus.customerbase.data;
 
+/**
+ * @author infinitivus
+ */
 public interface IDelete {
     void delete ();
 }
Index: src/main/java/com/project/infinitivus/customerbase/data/IClear.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data;\r\n\r\nimport java.io.IOException;\r\n\r\npublic interface IClear {\r\n    void clear() throws IOException;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/IClear.java b/src/main/java/com/project/infinitivus/customerbase/data/IClear.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/IClear.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/IClear.java	(date 1641921237682)
@@ -2,6 +2,9 @@
 
 import java.io.IOException;
 
+/**
+ * @author infinitivus
+ */
 public interface IClear {
     void clear() throws IOException;
 }
Index: src/main/java/com/project/infinitivus/customerbase/data/ISelect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data;\r\n\r\npublic interface ISelect {\r\n    void select();\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/ISelect.java b/src/main/java/com/project/infinitivus/customerbase/data/ISelect.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/ISelect.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/ISelect.java	(date 1641921238504)
@@ -1,5 +1,8 @@
 package com.project.infinitivus.customerbase.data;
 
+/**
+ * @author infinitivus
+ */
 public interface ISelect {
     void select();
 }
Index: src/main/java/com/project/infinitivus/customerbase/data/IInsert.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data;\r\n\r\npublic interface IInsert {\r\n    void insert(int i);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/IInsert.java b/src/main/java/com/project/infinitivus/customerbase/data/IInsert.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/IInsert.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/IInsert.java	(date 1641921238511)
@@ -1,5 +1,8 @@
 package com.project.infinitivus.customerbase.data;
 
+/**
+ * @author infinitivus
+ */
 public interface IInsert {
     void insert(int i);
 }
Index: src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/IChooseFromTwo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.view.input.choose_from_two;\r\n\r\npublic interface IChooseFromTwo {\r\n    public boolean choose(String key,int value);\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/IChooseFromTwo.java b/src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/IChooseFromTwo.java
--- a/src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/IChooseFromTwo.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/IChooseFromTwo.java	(date 1641919601333)
@@ -1,6 +1,8 @@
 package com.project.infinitivus.customerbase.view.input.choose_from_two;
 
+/**
+ * @author infinitivus
+ */
 public interface IChooseFromTwo {
-    public boolean choose(String key,int value);
-
+    boolean choose(String key, int value);
 }
\ No newline at end of file
Index: src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/InputYesOrNo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.view.input.choose_from_two;\r\n\r\nimport com.project.infinitivus.customerbase.view.input.InputString;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\n\r\npublic class InputYesOrNo implements IChooseFromTwo {\r\n\r\n    @Override\r\n    public boolean choose(String key, int value) {\r\n         InputString inputString = new InputString();\r\n         OutputMessageColumn outputMessageColumn= new OutputMessageColumn();\r\n        outputMessageColumn.outputMessage(key, value);\r\n        String chooseChar = inputString.inputString();\r\n        return chooseChar.equalsIgnoreCase(\"Y\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/InputYesOrNo.java b/src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/InputYesOrNo.java
--- a/src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/InputYesOrNo.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/InputYesOrNo.java	(date 1641919601271)
@@ -3,6 +3,9 @@
 import com.project.infinitivus.customerbase.view.input.InputString;
 import com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;
 
+/**
+ * @author infinitivus
+ */
 public class InputYesOrNo implements IChooseFromTwo {
 
     @Override
Index: src/main/java/com/project/infinitivus/customerbase/view/output/OutputInfoSetting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.view.output;\r\n\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.IOutputMessage;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageLine;\r\n\r\npublic class OutputInfoSetting {\r\n   private IOutputMessage iOutputMessage = new OutputMessageColumn();\r\n\r\n    public void OutputSettingProgram(int optionSave) {\r\n        iOutputMessage.outputMessage(\"outputSettingProgram\", 1);\r\n        iOutputMessage.outputMessage(\"outputSettingProgram\", 2);\r\n        if (optionSave == 2) {\r\n            iOutputMessage.outputMessage(\"outputSettingProgram\", 4);\r\n        } else {\r\n            iOutputMessage.outputMessage(\"outputSettingProgram\", 3);\r\n        }\r\n    }\r\n\r\n    public void OutputSettingDB(String dbType, String dbPath, String dbLogin,String dbPassword,String tableName) {\r\n\r\n        iOutputMessage.outputMessage(\"outputSettingDB\", 1);\r\n        if (dbType.equals(\"1\")) {\r\n            iOutputMessage.outputMessage(\"outputSettingDB\", 2);\r\n        } else {\r\n            iOutputMessage.outputMessage(\"outputSettingDB\", 3);\r\n        }\r\n        IOutputMessage iOutputMessage = new OutputMessageLine();\r\n        iOutputMessage.outputMessage(\"outputSettingDB\", 4);\r\n        System.out.println(dbPath);\r\n        iOutputMessage.outputMessage(\"outputSettingDB\", 5);\r\n        System.out.println(dbLogin);\r\n        iOutputMessage.outputMessage(\"outputSettingDB\", 6);\r\n        System.out.println(dbPassword);\r\n        iOutputMessage.outputMessage(\"outputSettingDB\", 7);\r\n        System.out.println(tableName);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/view/output/OutputInfoSetting.java b/src/main/java/com/project/infinitivus/customerbase/view/output/OutputInfoSetting.java
--- a/src/main/java/com/project/infinitivus/customerbase/view/output/OutputInfoSetting.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/view/output/OutputInfoSetting.java	(date 1641919601415)
@@ -5,7 +5,7 @@
 import com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageLine;
 
 public class OutputInfoSetting {
-   private IOutputMessage iOutputMessage = new OutputMessageColumn();
+   private final IOutputMessage iOutputMessage = new OutputMessageColumn();
 
     public void OutputSettingProgram(int optionSave) {
         iOutputMessage.outputMessage("outputSettingProgram", 1);
@@ -18,7 +18,6 @@
     }
 
     public void OutputSettingDB(String dbType, String dbPath, String dbLogin,String dbPassword,String tableName) {
-
         iOutputMessage.outputMessage("outputSettingDB", 1);
         if (dbType.equals("1")) {
             iOutputMessage.outputMessage("outputSettingDB", 2);
Index: src/main/java/com/project/infinitivus/customerbase/view/output/OutputTable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.view.output;\r\n\r\nimport com.project.infinitivus.customerbase.service.work_with_person.Person;\r\n\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n *\r\n * @author infinitivus\r\n */\r\npublic class OutputTable {\r\n     private final ArrayList<String> HEADER_DATA = Localization.message.get(\"headerTable\");\r\n    public final String SPECIFIER = \"%-15s%-30s%-20s%-20s%-15s%-20s%-20s%-30s%-6s%-10s\";\r\n     final String SHORT_SPECIFIER = \"%-15s%-30s%-20s%-20s%-15s%n\";\r\n     private final String HEADER = String.format(\"N. \" + SPECIFIER, HEADER_DATA .get(1), HEADER_DATA .get(2), HEADER_DATA .get(3),\r\n            HEADER_DATA .get(4), HEADER_DATA .get(5), HEADER_DATA .get(6), HEADER_DATA .get(7), HEADER_DATA .get(8), HEADER_DATA .get(9),\r\n            HEADER_DATA .get(10));\r\n     private final String SHORT_HEADER = String.format(\"N. \" + SHORT_SPECIFIER, HEADER_DATA .get(1), HEADER_DATA .get(2), HEADER_DATA .get(3),\r\n            HEADER_DATA .get(4), HEADER_DATA .get(5));\r\n    private String DODDEDLINE = \"------------------------------------------------------------------------------\"\r\n            + \"----------------------------------------------------------------------------------------------------------------\";\r\n    String SHORT_DODDEDLINE = \"-----------------------------------------------------------------------------------------------------\";\r\n\r\n   public void longHeader(){\r\n        System.out.println(DODDEDLINE);\r\n        System.out.format(HEADER);\r\n        System.out.println(\"\\n\" + DODDEDLINE);\r\n    }\r\n\r\n    public void outputNumberPerson(int numberPerson){\r\n        System.out.print(numberPerson + \". \" + Person.list.get(numberPerson) + \"\\n\");\r\n        System.out.println(DODDEDLINE);\r\n    }\r\n\r\n    void shortHeader(){\r\n        System.out.println(SHORT_DODDEDLINE);\r\n        System.out.format(SHORT_HEADER);\r\n        System.out.println(SHORT_DODDEDLINE);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/view/output/OutputTable.java b/src/main/java/com/project/infinitivus/customerbase/view/output/OutputTable.java
--- a/src/main/java/com/project/infinitivus/customerbase/view/output/OutputTable.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/view/output/OutputTable.java	(date 1641919601439)
@@ -17,7 +17,7 @@
             HEADER_DATA .get(10));
      private final String SHORT_HEADER = String.format("N. " + SHORT_SPECIFIER, HEADER_DATA .get(1), HEADER_DATA .get(2), HEADER_DATA .get(3),
             HEADER_DATA .get(4), HEADER_DATA .get(5));
-    private String DODDEDLINE = "------------------------------------------------------------------------------"
+    private final String DODDEDLINE = "------------------------------------------------------------------------------"
             + "----------------------------------------------------------------------------------------------------------------";
     String SHORT_DODDEDLINE = "-----------------------------------------------------------------------------------------------------";
 
Index: src/main/java/com/project/infinitivus/customerbase/service/security/CreateSecurityPassword.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.security;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.security.spec.InvalidKeySpecException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\n/**\r\n *\r\n * @author aals\r\n */\r\npublic class CreateSecurityPassword extends Security {\r\n\r\n    public void createPassword(String password) {\r\n        try {\r\n            byte[] salt = generateSalt();\r\n            writingBytesToFile(SECURITY_PROGRAM_SALT, salt);\r\n            writingBytesToFile(SECURITY_PROGRAM_KEY, getEncryptedPassword(password, salt));\r\n        } catch (NoSuchAlgorithmException | InvalidKeySpecException ex) {\r\n            Logger.getLogger(Security.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n\r\n    private void writingBytesToFile(String nameLine, byte[] data) {\r\n\r\n        try (FileOutputStream output = new FileOutputStream(nameLine)) {\r\n            output.write(data, 0, data.length);\r\n        } catch (IOException ex) {\r\n            Logger.getLogger(CreateSecurityPassword.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/security/CreateSecurityPassword.java b/src/main/java/com/project/infinitivus/customerbase/service/security/CreateSecurityPassword.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/security/CreateSecurityPassword.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/security/CreateSecurityPassword.java	(date 1641919601403)
@@ -9,7 +9,7 @@
 
 /**
  *
- * @author aals
+ * @author infinitivus
  */
 public class CreateSecurityPassword extends Security {
 
Index: src/main/java/com/project/infinitivus/customerbase/service/security/Security.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.security;\r\n/**\r\n *\r\n * @author aals\r\n */\r\nimport javax.crypto.SecretKeyFactory;\r\nimport javax.crypto.spec.PBEKeySpec;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.security.SecureRandom;\r\nimport java.security.spec.InvalidKeySpecException;\r\nimport java.security.spec.KeySpec;\r\nimport java.util.Arrays;\r\n\r\nclass Security {\r\n\r\n    final String SECURITY_PROGRAM_KEY = \"src\\\\main\\\\java\\\\com\\\\project\"\r\n            + \"\\\\infinitivus\\\\customerbase\\\\logic\\\\security\\\\securityKey.bin\";\r\n    final String SECURITY_PROGRAM_SALT = \"src\\\\main\\\\java\\\\com\\\\project\"\r\n            + \"\\\\infinitivus\\\\customerbase\\\\logic\\\\security\\\\securitySalt.bin\";\r\n\r\n    boolean authenticate(String attemptedPassword, byte[] encryptedPassword, byte[] salt)\r\n            throws NoSuchAlgorithmException, InvalidKeySpecException {\r\n        byte[] encryptedAttemptedPassword = getEncryptedPassword(attemptedPassword, salt);\r\n        return Arrays.equals(encryptedPassword, encryptedAttemptedPassword);\r\n    }\r\n\r\n    byte[] getEncryptedPassword(String password, byte[] salt)\r\n            throws NoSuchAlgorithmException, InvalidKeySpecException {\r\n        String algorithm = \"PBKDF2WithHmacSHA1\";\r\n        int derivedKeyLength = 160;\r\n        int iterations = 5000;\r\n        KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, iterations, derivedKeyLength);\r\n        SecretKeyFactory f = SecretKeyFactory.getInstance(algorithm);\r\n        return f.generateSecret(spec).getEncoded();\r\n    }\r\n\r\n    byte[] generateSalt() throws NoSuchAlgorithmException {\r\n        SecureRandom random = SecureRandom.getInstance(\"SHA1PRNG\");\r\n        byte[] salt = new byte[8];\r\n        random.nextBytes(salt);\r\n        return salt;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/security/Security.java b/src/main/java/com/project/infinitivus/customerbase/service/security/Security.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/security/Security.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/security/Security.java	(date 1641920035220)
@@ -1,8 +1,5 @@
 package com.project.infinitivus.customerbase.service.security;
-/**
- *
- * @author aals
- */
+
 import javax.crypto.SecretKeyFactory;
 import javax.crypto.spec.PBEKeySpec;
 import java.security.NoSuchAlgorithmException;
@@ -11,12 +8,15 @@
 import java.security.spec.KeySpec;
 import java.util.Arrays;
 
+/**
+ * @author infinitivus
+ */
 class Security {
 
     final String SECURITY_PROGRAM_KEY = "src\\main\\java\\com\\project"
-            + "\\infinitivus\\customerbase\\logic\\security\\securityKey.bin";
+            + "\\infinitivus\\customerbase\\service\\security\\securityKey.bin";
     final String SECURITY_PROGRAM_SALT = "src\\main\\java\\com\\project"
-            + "\\infinitivus\\customerbase\\logic\\security\\securitySalt.bin";
+            + "\\infinitivus\\customerbase\\service\\security\\securitySalt.bin";
 
     boolean authenticate(String attemptedPassword, byte[] encryptedPassword, byte[] salt)
             throws NoSuchAlgorithmException, InvalidKeySpecException {
Index: src/main/java/com/project/infinitivus/customerbase/service/settings/FirstStart.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.settings;\r\n\r\nimport com.project.infinitivus.customerbase.service.settings.setting_program.NewSettingProgram;\r\nimport com.project.infinitivus.customerbase.service.settings.setting_program.SettingProgram;\r\nimport com.project.infinitivus.customerbase.view.input.security.SecurityInputPassword;\r\n\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\n/**\r\n * @author aals\r\n */\r\npublic class FirstStart extends SettingProgram {\r\n\r\n    private final Path CREATE_DIRECTORY_SYSTEM = Paths.get(\"src\\\\main\\\\java\\\\com\"\r\n            + \"\\\\project\\\\infinitivus\\\\customerbase\\\\logic\\\\system_file\");\r\n\r\n    public void firstStart() {\r\n        try {\r\n            if (!Files.exists(CREATE_DIRECTORY_SYSTEM)) {\r\n                Files.createDirectories(CREATE_DIRECTORY_SYSTEM);\r\n                new NewSettingProgram().newSettingProgram();\r\n                new SecurityInputPassword().createPassword();\r\n            }\r\n        } catch (\r\n                IOException e) {\r\n            Logger.getLogger(FirstStart.class\r\n                    .getName()).log(Level.SEVERE, null, e);\r\n        }\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/settings/FirstStart.java b/src/main/java/com/project/infinitivus/customerbase/service/settings/FirstStart.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/settings/FirstStart.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/settings/FirstStart.java	(date 1641919601345)
@@ -2,6 +2,7 @@
 
 import com.project.infinitivus.customerbase.service.settings.setting_program.NewSettingProgram;
 import com.project.infinitivus.customerbase.service.settings.setting_program.SettingProgram;
+import com.project.infinitivus.customerbase.service.work_with_person.Person;
 import com.project.infinitivus.customerbase.view.input.security.SecurityInputPassword;
 
 import java.io.IOException;
@@ -12,12 +13,12 @@
 import java.util.logging.Logger;
 
 /**
- * @author aals
+ * @author infinitivus
  */
 public class FirstStart extends SettingProgram {
 
     private final Path CREATE_DIRECTORY_SYSTEM = Paths.get("src\\main\\java\\com"
-            + "\\project\\infinitivus\\customerbase\\logic\\system_file");
+            + "\\project\\infinitivus\\customerbase\\service\\system_file");
 
     public void firstStart() {
         try {
@@ -25,6 +26,8 @@
                 Files.createDirectories(CREATE_DIRECTORY_SYSTEM);
                 new NewSettingProgram().newSettingProgram();
                 new SecurityInputPassword().createPassword();
+                Person person = new Person("Infinitivus", "Alex", "89104378665", "aals@ya.ru", "", "", "", "", "", "");
+                Person.list.add(person);
             }
         } catch (
                 IOException e) {
Index: src/main/java/com/project/infinitivus/customerbase/service/security/ComparisonSecurityPassword.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.security;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.security.NoSuchAlgorithmException;\r\nimport java.security.spec.InvalidKeySpecException;\r\n\r\n/**\r\n *\r\n * @author aals\r\n */\r\npublic class ComparisonSecurityPassword extends Security {\r\n\r\n    public boolean comparisonPassword(String password) throws IOException,\r\n            NoSuchAlgorithmException, InvalidKeySpecException {\r\n        byte[] salt = readingBytesFromFile(SECURITY_PROGRAM_SALT);\r\n        byte[] key = readingBytesFromFile(SECURITY_PROGRAM_KEY);\r\n        return authenticate(password, key, salt);\r\n    }\r\n\r\n    private byte[] readingBytesFromFile(String nameLine) throws  IOException {\r\n        try (FileInputStream input = new FileInputStream(nameLine)) {\r\n            byte[] buffer = new byte[input.available()];\r\n            input.read(buffer, 0, buffer.length);\r\n            return buffer;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/security/ComparisonSecurityPassword.java b/src/main/java/com/project/infinitivus/customerbase/service/security/ComparisonSecurityPassword.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/security/ComparisonSecurityPassword.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/security/ComparisonSecurityPassword.java	(date 1641919601281)
@@ -6,8 +6,7 @@
 import java.security.spec.InvalidKeySpecException;
 
 /**
- *
- * @author aals
+ * @author infinitivus
  */
 public class ComparisonSecurityPassword extends Security {
 
Index: src/main/java/com/project/infinitivus/customerbase/service/settings/MainMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.settings;\r\n\r\nimport com.project.infinitivus.customerbase.service.work_with_person.*;\r\nimport com.project.infinitivus.customerbase.view.input.menu.InputMainMenu;\r\nimport com.project.infinitivus.customerbase.view.output.OutputInfoPerson;\r\n\r\npublic class MainMenu {\r\n    int inputNumber;\r\n    InputMainMenu inputMainMenu = new InputMainMenu();\r\n\r\n    public void mainMenu() {\r\n        do {\r\n            inputNumber = inputMainMenu.inputNumberMenu();\r\n            switch (inputNumber) {\r\n                case 1:\r\n                    new OutputInfoPerson().shortOutputListPerson();\r\n                    break;\r\n                case 2:\r\n                    new OutputInfoPerson().longOutputListPerson();\r\n                    break;\r\n                case 3:\r\n                    new CreatePerson().createPerson();\r\n                    break;\r\n                case 4:\r\n                    new EditPerson().editDataPerson();\r\n                    break;\r\n                case 5:\r\n                    new DeletePerson().deletePerson();\r\n                    break;\r\n                case 6:\r\n                    new SearchPerson().searchPerson();\r\n                    break;\r\n                case 7:\r\n                    new SortedPerson().menuSorted();\r\n                    break;\r\n                case 8: // Create File Print Person\r\n\r\n                    break;\r\n                case 9: // Settings\r\n\r\n                    break;\r\n            }\r\n//            } else {\r\n//                System.out.println(Localization.attention[4]);\r\n        } while (inputNumber != 0);\r\n\r\n//        if (Settings.optionSaving.equals(\"2\")) {\r\n//            System.out.println(Localization.messageMenu[0]);\r\n//            String SaveToFile = InputData.inputString();\r\n//            if (SaveToFile.equalsIgnoreCase(\"y\")) {\r\n//                new Settings().overwritingDataListToFile();\r\n//            }\r\n//        }\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/settings/MainMenu.java b/src/main/java/com/project/infinitivus/customerbase/service/settings/MainMenu.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/settings/MainMenu.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/settings/MainMenu.java	(date 1641917239127)
@@ -4,6 +4,9 @@
 import com.project.infinitivus.customerbase.view.input.menu.InputMainMenu;
 import com.project.infinitivus.customerbase.view.output.OutputInfoPerson;
 
+/**
+ * @author infinitivus
+ */
 public class MainMenu {
     int inputNumber;
     InputMainMenu inputMainMenu = new InputMainMenu();
@@ -34,24 +37,10 @@
                     new SortedPerson().menuSorted();
                     break;
                 case 8: // Create File Print Person
-
                     break;
                 case 9: // Settings
-
                     break;
             }
-//            } else {
-//                System.out.println(Localization.attention[4]);
         } while (inputNumber != 0);
-
-//        if (Settings.optionSaving.equals("2")) {
-//            System.out.println(Localization.messageMenu[0]);
-//            String SaveToFile = InputData.inputString();
-//            if (SaveToFile.equalsIgnoreCase("y")) {
-//                new Settings().overwritingDataListToFile();
-//            }
-//        }
-
     }
-
 }
Index: src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/MySqlConnect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.data_base.connect;\r\n\r\nimport com.project.infinitivus.customerbase.data.data_base.ApplySettingDB;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.IOutputMessage;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.SQLException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class MySqlConnect implements IConnect {\r\n    private Connection dbConnection = null;\r\n\r\n//    jdbc:mysql://localhost:3306/\r\n//    root\r\n//    admin\r\n\r\n    @Override\r\n    public Connection connect() {\r\n        IOutputMessage iOutputMessage = new OutputMessageColumn();\r\n        try {\r\n            Class.forName(\"com.mysql.cj.jdbc.Driver\");\r\n        } catch (ClassNotFoundException ex) {\r\n            iOutputMessage.outputMessage(\"errorConnectivityDB\", 1);\r\n            Logger.getLogger(MySqlConnect.class.getName()).log(Level.SEVERE, null, ex);\r\n            return dbConnection;\r\n        }\r\n        try {\r\n            dbConnection = DriverManager.getConnection(ApplySettingDB.dbPath, ApplySettingDB.dbLogin, ApplySettingDB.dbPassword); //////////////\r\n        } catch (SQLException ex) {\r\n            iOutputMessage.outputMessage(\"errorConnectivityDB\", 2);\r\n            Logger.getLogger(MySqlConnect.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n        return dbConnection;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/MySqlConnect.java b/src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/MySqlConnect.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/MySqlConnect.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/MySqlConnect.java	(date 1641921238395)
@@ -10,6 +10,9 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
 public class MySqlConnect implements IConnect {
     private Connection dbConnection = null;
 
Index: src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/NewSettingDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.settings.setting_db;\r\n\r\nimport com.project.infinitivus.customerbase.data.data_base.CreateSchemaAndTable;\r\nimport com.project.infinitivus.customerbase.view.input.menu.MenuSettingDB;\r\n\r\npublic class NewSettingDB extends SettingDB {\r\n    private CreateSchemaAndTable createSchemaAndTable = new CreateSchemaAndTable();\r\n\r\n    public void getSettingDB() {\r\n        MenuSettingDB menuSettingDB = new MenuSettingDB();\r\n        String dbType = menuSettingDB.typeDB(\"settingDB\", 1);\r\n        String dbPath = menuSettingDB.settingDB(\"settingDB\", 2);\r\n        String dbLogin = menuSettingDB.settingDB(\"settingDB\", 3);\r\n        String dbPassword = menuSettingDB.settingDB(\"settingDB\", 4);\r\n        String schemaName = menuSettingDB.settingDB(\"settingDB\", 5);\r\n        String tableName = menuSettingDB.settingDB(\"settingDB\", 6);\r\n        transmissionSettingDB(dbType, dbPath, dbLogin, dbPassword, schemaName, tableName);\r\n    }\r\n\r\n    private void transmissionSettingDB(String dbType, String dbPath, String dbLogin,\r\n                                       String dbPassword, String schemaName, String tableName) {\r\n        dataTransmission(dbType, dbPath, dbLogin, dbPassword, tableName);\r\n        dbPath = createSchemaDB(dbPath, schemaName);\r\n        dataTransmission(dbType, dbPath, dbLogin, dbPassword, tableName);\r\n        createTableDB();\r\n        new SaveSettingDB().saveSettingDB(dbType, dbPath, dbLogin, dbPassword, tableName);\r\n    }\r\n\r\n    private String createSchemaDB(String dbPath, String schemaName) {\r\n        createSchemaAndTable.createSchema(schemaName);\r\n        dbPath = dbPath + schemaName;\r\n        return dbPath;\r\n    }\r\n\r\n    private void createTableDB() {\r\n        createSchemaAndTable.createTable();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/NewSettingDB.java b/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/NewSettingDB.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/NewSettingDB.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/NewSettingDB.java	(date 1641916349802)
@@ -3,8 +3,12 @@
 import com.project.infinitivus.customerbase.data.data_base.CreateSchemaAndTable;
 import com.project.infinitivus.customerbase.view.input.menu.MenuSettingDB;
 
+/**
+ * @author infinitivus
+ */
+
 public class NewSettingDB extends SettingDB {
-    private CreateSchemaAndTable createSchemaAndTable = new CreateSchemaAndTable();
+    private final CreateSchemaAndTable createSchemaAndTable = new CreateSchemaAndTable();
 
     public void getSettingDB() {
         MenuSettingDB menuSettingDB = new MenuSettingDB();
Index: src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/PostgreSqlConnect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.data_base.connect;\r\n\r\nimport com.project.infinitivus.customerbase.data.data_base.ApplySettingDB;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.IOutputMessage;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.SQLException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class PostgreSqlConnect implements IConnect {\r\n    private Connection dbConnection = null;\r\n\r\n//    jdbc:postgresql://localhost:5432/\r\n//    postgres\r\n//    admin\r\n\r\n    @Override\r\n    public Connection connect() {\r\n        IOutputMessage iOutputMessage = new OutputMessageColumn();\r\n        try {\r\n            Class.forName(\"org.postgresql.Driver\");\r\n        } catch (ClassNotFoundException ex) {\r\n            iOutputMessage.outputMessage(\"errorConnectivityDB\", 1);\r\n            Logger.getLogger(PostgreSqlConnect.class.getName()).log(Level.SEVERE, null, ex);\r\n            return dbConnection;\r\n        }\r\n        try {\r\n            dbConnection = DriverManager.getConnection(ApplySettingDB.dbPath, ApplySettingDB.dbLogin, ApplySettingDB.dbPassword); //////////////\r\n        } catch (SQLException ex) {\r\n            iOutputMessage.outputMessage(\"errorConnectivityDB\", 2);\r\n            Logger.getLogger(PostgreSqlConnect.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n        return dbConnection;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/PostgreSqlConnect.java b/src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/PostgreSqlConnect.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/PostgreSqlConnect.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/PostgreSqlConnect.java	(date 1641921238451)
@@ -10,6 +10,9 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
 public class PostgreSqlConnect implements IConnect {
     private Connection dbConnection = null;
 
Index: src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/SettingDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.settings.setting_db;\r\n\r\nimport com.project.infinitivus.customerbase.data.ChoosingStorageMethod;\r\nimport com.project.infinitivus.customerbase.data.data_base.ApplySettingDB;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\n/**\r\n * @author aals\r\n */\r\npublic class SettingDB {\r\n\r\n    final String SETTING_LINE_DB = \"src\\\\main\\\\java\\\\com\\\\project\"\r\n            + \"\\\\infinitivus\\\\customerbase\\\\logic\\\\system_file\\\\settingsDB.txt\";\r\n\r\n    public void readSettingsDB() {\r\n        try (BufferedReader reader = new BufferedReader(new FileReader(SETTING_LINE_DB))) {\r\n            String dbType = reader.readLine();\r\n            String dbPath = reader.readLine();\r\n            String dbLogin = reader.readLine();\r\n            String dbPassword = reader.readLine();\r\n            String tableName = reader.readLine();\r\n            dataTransmission(dbType, dbPath, dbLogin, dbPassword, tableName);\r\n            ChoosingStorageMethod.iSelect.select();\r\n        } catch (IOException e) {\r\n            Logger.getLogger(SettingDB.class\r\n                    .getName()).log(Level.SEVERE, null, e);\r\n        }\r\n    }\r\n\r\n    void dataTransmission(String dbType, String dbPath, String dbLogin, String dbPassword, String tableName) {\r\n        new ApplySettingDB(dbType, dbPath, dbLogin, dbPassword, tableName);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/SettingDB.java b/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/SettingDB.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/SettingDB.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/SettingDB.java	(date 1641919601379)
@@ -15,7 +15,7 @@
 public class SettingDB {
 
     final String SETTING_LINE_DB = "src\\main\\java\\com\\project"
-            + "\\infinitivus\\customerbase\\logic\\system_file\\settingsDB.txt";
+            + "\\infinitivus\\customerbase\\service\\system_file\\settingsDB.txt";
 
     public void readSettingsDB() {
         try (BufferedReader reader = new BufferedReader(new FileReader(SETTING_LINE_DB))) {
Index: src/main/java/com/project/infinitivus/customerbase/data/ChoosingStorageMethod.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data;\r\n\r\n\r\nimport com.project.infinitivus.customerbase.data.data_base.*;\r\nimport com.project.infinitivus.customerbase.data.file.*;\r\n\r\npublic class ChoosingStorageMethod {\r\n    public static IUpdate iUpdate;\r\n    public static ISelect iSelect;\r\n    public static IInsert iInsert;\r\n    public static IDelete iDelete;\r\n    public static IClear iClear;\r\n\r\n    public void choosingStorageMethod(int optionSave) {\r\n        if (optionSave == 1) {\r\n            iUpdate = new UpdateFile();\r\n            iClear = new ClearFile();\r\n            iDelete = new DeleteFile();\r\n            iInsert = new InsertFile();\r\n            iSelect = new SelectFile();\r\n        } else {\r\n            iUpdate = new UpdateData();\r\n            iClear = new ClearData();\r\n            iDelete = new DeleteData();\r\n            iInsert = new InsertData();\r\n            iSelect = new SelectData();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/ChoosingStorageMethod.java b/src/main/java/com/project/infinitivus/customerbase/data/ChoosingStorageMethod.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/ChoosingStorageMethod.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/ChoosingStorageMethod.java	(date 1641921237669)
@@ -1,9 +1,11 @@
 package com.project.infinitivus.customerbase.data;
 
-
 import com.project.infinitivus.customerbase.data.data_base.*;
 import com.project.infinitivus.customerbase.data.file.*;
 
+/**
+ * @author infinitivus
+ */
 public class ChoosingStorageMethod {
     public static IUpdate iUpdate;
     public static ISelect iSelect;
Index: src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/SaveSettingDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.settings.setting_db;\r\n\r\nimport java.io.IOException;\r\nimport java.io.RandomAccessFile;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\nclass SaveSettingDB extends SettingDB {\r\n\r\n    void saveSettingDB(String dbType, String dbPath, String dbLogin, String dbPassword, String tableName) {\r\n        try (RandomAccessFile random = new RandomAccessFile(SETTING_LINE_DB, \"rw\")) {\r\n            random.seek(0);\r\n            random.writeBytes(dbType + \"\\n\");\r\n            random.writeBytes(dbPath + \"\\n\");\r\n            random.writeBytes(dbLogin + \"\\n\");\r\n            random.writeBytes(dbPassword + \"\\n\");\r\n            random.writeBytes(tableName);\r\n        } catch (IOException e) {\r\n            Logger.getLogger(SaveSettingDB.class\r\n                    .getName()).log(Level.SEVERE, null, e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/SaveSettingDB.java b/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/SaveSettingDB.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/SaveSettingDB.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_db/SaveSettingDB.java	(date 1641916349768)
@@ -5,6 +5,10 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
+
 class SaveSettingDB extends SettingDB {
 
     void saveSettingDB(String dbType, String dbPath, String dbLogin, String dbPassword, String tableName) {
Index: src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/NewSettingProgram.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.settings.setting_program;\r\n\r\nimport com.project.infinitivus.customerbase.data.ChoosingStorageMethod;\r\nimport com.project.infinitivus.customerbase.data.file.CreateDirectoryAndFile;\r\nimport com.project.infinitivus.customerbase.service.settings.setting_db.NewSettingDB;\r\nimport com.project.infinitivus.customerbase.view.input.menu.MenuSettingProgram;\r\nimport com.project.infinitivus.customerbase.view.output.Localization;\r\n\r\npublic class NewSettingProgram {\r\n    private int optionSave;\r\n\r\n    public void newSettingProgram() {\r\n        MenuSettingProgram menuSettingProgram = new MenuSettingProgram();\r\n        int lang = menuSettingProgram.settingLanguage();\r\n        new Localization().installationLanguage(lang);\r\n        optionSave = menuSettingProgram.settingOptionSave();\r\n        new ChoosingStorageMethod().choosingStorageMethod(optionSave);\r\n        new SaveSettingProgram().saveSettingProgram(lang, optionSave);\r\n        if (optionSave == 1) {\r\n            new CreateDirectoryAndFile().createDirectory();\r\n        } else {\r\n            new NewSettingDB().getSettingDB();\r\n        }\r\n    }\r\n\r\n    public int getOptionSave() {\r\n        return optionSave;\r\n    }\r\n}\r\n\r\n\r\n//        if (optionSave == 1) {\r\n//            IDataStorageMethod iDataStorageMethod = new StoringDataFile();\r\n//\r\n//        } else {\r\n//            IDataStorageMethod iDataStorageMethod = new StoringDataBase();\r\n//\r\n//        }\r\n//    }\r\n//}\r\n//        public void overwritingDataListToFile() {\r\n//        try {\r\n//            if (!Files.exists(PERSON_LIBRARY)) {\r\n//                Files.createFile(PERSON_LIBRARY);\r\n//                // Файл для локального хранения списка клиентов создан\r\n//            } else {\r\n//// Файл с записями клиентов был создан ранее. хотите перезаписать?\r\n//                    Files.delete(PERSON_LIBRARY);\r\n//                    Files.createFile(PERSON_LIBRARY);\r\n//      //          }\r\n//            }\r\n//            if (!Person.list.isEmpty()) {\r\n//                System.out.println(Localization.messageOverWritingDataListToFile[1]);\r\n//                String select = inputString();\r\n//                if (select.equalsIgnoreCase(\"y\")) {\r\n//                    for (int i = 0; i < Person.list.size(); i++) {\r\n//                        saveToFile.savePersonToFile(i);\r\n//                    }\r\n//                } else {\r\n//                    Person.list.clear();\r\n//                    zeroIndexPersonList();\r\n//                    saveToFile.savePersonToFile(0);\r\n//                }\r\n//            } else {\r\n//                zeroIndexPersonList();\r\n//                saveToFile.savePersonToFile(0);\r\n//            }\r\n//        } catch (IOException ex) {\r\n//            Logger.getLogger(NewSettingProgram.class\r\n//                    .getName()).log(Level.SEVERE, null, ex);\r\n//        }\r\n//    }\r\n//}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/NewSettingProgram.java b/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/NewSettingProgram.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/NewSettingProgram.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/NewSettingProgram.java	(date 1641916349757)
@@ -6,14 +6,17 @@
 import com.project.infinitivus.customerbase.view.input.menu.MenuSettingProgram;
 import com.project.infinitivus.customerbase.view.output.Localization;
 
+/**
+ * @author infinitivus
+ */
+
 public class NewSettingProgram {
-    private int optionSave;
 
     public void newSettingProgram() {
         MenuSettingProgram menuSettingProgram = new MenuSettingProgram();
         int lang = menuSettingProgram.settingLanguage();
         new Localization().installationLanguage(lang);
-        optionSave = menuSettingProgram.settingOptionSave();
+        int optionSave = menuSettingProgram.settingOptionSave();
         new ChoosingStorageMethod().choosingStorageMethod(optionSave);
         new SaveSettingProgram().saveSettingProgram(lang, optionSave);
         if (optionSave == 1) {
@@ -22,52 +25,4 @@
             new NewSettingDB().getSettingDB();
         }
     }
-
-    public int getOptionSave() {
-        return optionSave;
-    }
 }
-
-
-//        if (optionSave == 1) {
-//            IDataStorageMethod iDataStorageMethod = new StoringDataFile();
-//
-//        } else {
-//            IDataStorageMethod iDataStorageMethod = new StoringDataBase();
-//
-//        }
-//    }
-//}
-//        public void overwritingDataListToFile() {
-//        try {
-//            if (!Files.exists(PERSON_LIBRARY)) {
-//                Files.createFile(PERSON_LIBRARY);
-//                // Файл для локального хранения списка клиентов создан
-//            } else {
-//// Файл с записями клиентов был создан ранее. хотите перезаписать?
-//                    Files.delete(PERSON_LIBRARY);
-//                    Files.createFile(PERSON_LIBRARY);
-//      //          }
-//            }
-//            if (!Person.list.isEmpty()) {
-//                System.out.println(Localization.messageOverWritingDataListToFile[1]);
-//                String select = inputString();
-//                if (select.equalsIgnoreCase("y")) {
-//                    for (int i = 0; i < Person.list.size(); i++) {
-//                        saveToFile.savePersonToFile(i);
-//                    }
-//                } else {
-//                    Person.list.clear();
-//                    zeroIndexPersonList();
-//                    saveToFile.savePersonToFile(0);
-//                }
-//            } else {
-//                zeroIndexPersonList();
-//                saveToFile.savePersonToFile(0);
-//            }
-//        } catch (IOException ex) {
-//            Logger.getLogger(NewSettingProgram.class
-//                    .getName()).log(Level.SEVERE, null, ex);
-//        }
-//    }
-//}
\ No newline at end of file
Index: src/main/java/com/project/infinitivus/customerbase/Start.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase;\r\n\r\nimport com.project.infinitivus.customerbase.service.settings.FirstStart;\r\nimport com.project.infinitivus.customerbase.service.settings.MainMenu;\r\nimport com.project.infinitivus.customerbase.service.settings.setting_program.SettingProgram;\r\nimport com.project.infinitivus.customerbase.service.work_with_person.Person;\r\nimport com.project.infinitivus.customerbase.view.input.security.SecurityComparePassword;\r\n\r\n/**\r\n * @author infinitivus\r\n */\r\npublic class Start {\r\n\r\n    public static void main(String[] args) {\r\n        Person person = new Person(\"Infinitivus\", \"Alex\", \"89104378665\", \"aals@ya.ru\", \"21.02.1975\", \"\", \"\", \"\", \"\", \"\");\r\n        Person.list.add(person);\r\n        new FirstStart().firstStart();\r\n        new SettingProgram().readSettingsProgram();\r\n        new SecurityComparePassword().comparePassword();\r\n        new MainMenu().mainMenu();\r\n\r\n//        Settings set=new Settings();\r\n//        set.firstLaunch();\r\n//        Person.list.clear();\r\n//        if (set.optionSaving.equals(\"1\")) {\r\n//          new ReadingFile().readFilePersonList();\r\n//        } else {\r\n//            new SqlMethods().selectData();\r\n//        }\r\n//        new Menu().menuPerson();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/Start.java b/src/main/java/com/project/infinitivus/customerbase/Start.java
--- a/src/main/java/com/project/infinitivus/customerbase/Start.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/Start.java	(date 1641915896234)
@@ -12,21 +12,9 @@
 public class Start {
 
     public static void main(String[] args) {
-        Person person = new Person("Infinitivus", "Alex", "89104378665", "aals@ya.ru", "21.02.1975", "", "", "", "", "");
-        Person.list.add(person);
         new FirstStart().firstStart();
         new SettingProgram().readSettingsProgram();
         new SecurityComparePassword().comparePassword();
         new MainMenu().mainMenu();
-
-//        Settings set=new Settings();
-//        set.firstLaunch();
-//        Person.list.clear();
-//        if (set.optionSaving.equals("1")) {
-//          new ReadingFile().readFilePersonList();
-//        } else {
-//            new SqlMethods().selectData();
-//        }
-//        new Menu().menuPerson();
     }
 }
Index: src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/SettingProgram.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.settings.setting_program;\r\n\r\nimport com.project.infinitivus.customerbase.data.ChoosingStorageMethod;\r\nimport com.project.infinitivus.customerbase.service.settings.setting_db.SettingDB;\r\nimport com.project.infinitivus.customerbase.view.output.Localization;\r\n\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.util.Scanner;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\n/**\r\n * @author aals\r\n */\r\npublic class SettingProgram {\r\n    //    final String LIBRARY_LINE_BACKUP = \"src\\\\main\\\\java\\\\com\\\\project\"\r\n//            + \"\\\\infinitivus\\\\customerbase\\\\data\\\\file\\\\library\\\\backup_copy.txt\";\r\n//     final Path LIBRARY_BACKUP = Paths.get(LIBRARY_LINE_BACKUP);\r\n    final String SETTING_LINE_PROGRAM = \"src\\\\main\\\\java\\\\com\\\\project\"\r\n            + \"\\\\infinitivus\\\\customerbase\\\\logic\\\\system_file\\\\settingsProgram.txt\";\r\n\r\n    private int optionSaving;\r\n    private int language;\r\n\r\n    public void readSettingsProgram() {\r\n        try (Scanner scanner = new Scanner(new File(SETTING_LINE_PROGRAM))) {\r\n            language = scanner.nextInt();\r\n            optionSaving = scanner.nextInt();\r\n            applySetting();\r\n        } catch (FileNotFoundException ex) {\r\n            Logger.getLogger(SettingProgram.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n\r\n    private void applySetting() {\r\n        new Localization().installationLanguage(language);\r\n        new ChoosingStorageMethod().choosingStorageMethod(optionSaving);\r\n        if (optionSaving == 2) {\r\n            new SettingDB().readSettingsDB();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/SettingProgram.java b/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/SettingProgram.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/SettingProgram.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/SettingProgram.java	(date 1641919601461)
@@ -14,11 +14,9 @@
  * @author aals
  */
 public class SettingProgram {
-    //    final String LIBRARY_LINE_BACKUP = "src\\main\\java\\com\\project"
-//            + "\\infinitivus\\customerbase\\data\\file\\library\\backup_copy.txt";
-//     final Path LIBRARY_BACKUP = Paths.get(LIBRARY_LINE_BACKUP);
+
     final String SETTING_LINE_PROGRAM = "src\\main\\java\\com\\project"
-            + "\\infinitivus\\customerbase\\logic\\system_file\\settingsProgram.txt";
+            + "\\infinitivus\\customerbase\\service\\system_file\\settingsProgram.txt";
 
     private int optionSaving;
     private int language;
Index: src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/SaveSettingProgram.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.settings.setting_program;\r\n\r\nimport java.io.FileOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.PrintStream;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\nclass SaveSettingProgram extends SettingProgram {\r\n    void saveSettingProgram(int language, int optionSaving) {\r\n        try (FileOutputStream fileOutput = new FileOutputStream(SETTING_LINE_PROGRAM);\r\n             PrintStream printStream = new PrintStream(fileOutput)) {\r\n            printStream.println(language);\r\n            printStream.println(optionSaving);\r\n        } catch (IOException ex) {\r\n            Logger.getLogger(SaveSettingProgram.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/SaveSettingProgram.java b/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/SaveSettingProgram.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/SaveSettingProgram.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/settings/setting_program/SaveSettingProgram.java	(date 1641917239138)
@@ -6,6 +6,9 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
 class SaveSettingProgram extends SettingProgram {
     void saveSettingProgram(int language, int optionSaving) {
         try (FileOutputStream fileOutput = new FileOutputStream(SETTING_LINE_PROGRAM);
Index: src/main/java/com/project/infinitivus/customerbase/service/work_with_person/Person.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.work_with_person;\r\n\r\n/**\r\n * @author infinitivus\r\n */\r\n\r\nimport com.project.infinitivus.customerbase.view.output.OutputInfoPerson;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Objects;\r\n\r\npublic class Person {\r\n\r\n    public static List<Person> list = new ArrayList<>();\r\n    private String surname;\r\n    private String name;\r\n    private String phone;\r\n    private String email;\r\n    private String birthday;\r\n    private String brand;\r\n    private String model;\r\n    private String vin;\r\n    private String year;\r\n    private String licensePlate;\r\n\r\n    public Person(String surname, String name, String phone, String email,\r\n                  String birthday, String brand, String model, String vin, String year,\r\n                  String licensePlate) {\r\n        this.surname = surname;\r\n        this.name = name;\r\n        this.phone = phone;\r\n        this.email = email;\r\n        this.birthday = birthday;\r\n        this.brand = brand;\r\n        this.model = model;\r\n        this.vin = vin;\r\n        this.year = year;\r\n        this.licensePlate = licensePlate;\r\n    }\r\n\r\n    Person() {\r\n\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setPhone(String phone) {\r\n        this.phone = phone;\r\n    }\r\n\r\n    public String getPhone() {\r\n        return phone;\r\n    }\r\n\r\n    public void setBirthday(String birthday) {\r\n        this.birthday = birthday;\r\n    }\r\n\r\n    public String getBirthday() {\r\n        return birthday;\r\n    }\r\n\r\n    public void setModel(String model) {\r\n        this.model = model;\r\n    }\r\n\r\n    public String getModel() {\r\n        return model;\r\n    }\r\n\r\n    public void setVin(String vin) {\r\n        this.vin = vin;\r\n    }\r\n\r\n    public String getVin() {\r\n        return vin;\r\n    }\r\n\r\n    public void setLicensePlate(String licensePlate) {\r\n        this.licensePlate = licensePlate;\r\n    }\r\n\r\n    public String getLicensePlate() {\r\n        return licensePlate;\r\n    }\r\n\r\n    public String getSurname() {\r\n        return surname;\r\n    }\r\n\r\n    public void setSurname(String surname) {\r\n        this.surname = surname;\r\n    }\r\n\r\n    public String getEmail() {\r\n        return email;\r\n    }\r\n\r\n    public void setEmail(String email) {\r\n        this.email = email;\r\n    }\r\n\r\n    public String getBrand() {\r\n        return brand;\r\n    }\r\n\r\n    public void setBrand(String brand) {\r\n        this.brand = brand;\r\n    }\r\n\r\n    public String getYear() {\r\n        return year;\r\n    }\r\n\r\n    public void setYear(String year) {\r\n        this.year = year;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return String.format(new OutputInfoPerson().SPECIFIER, surname, name, phone, email,\r\n                birthday, brand, model, vin, year, licensePlate);\r\n    }\r\n\r\n    @Override\r\n    public int hashCode() {\r\n        int hash = 7;\r\n        hash = 59 * hash + Objects.hashCode(this.surname);\r\n        hash = 59 * hash + Objects.hashCode(this.name);\r\n        hash = 59 * hash + Objects.hashCode(this.phone);\r\n        hash = 59 * hash + Objects.hashCode(this.email);\r\n        hash = 59 * hash + Objects.hashCode(this.birthday);\r\n        hash = 59 * hash + Objects.hashCode(this.brand);\r\n        hash = 59 * hash + Objects.hashCode(this.model);\r\n        hash = 59 * hash + Objects.hashCode(this.vin);\r\n        hash = 59 * hash + Objects.hashCode(this.year);\r\n        hash = 59 * hash + Objects.hashCode(this.licensePlate);\r\n        return hash;\r\n    }\r\n\r\n    @Override\r\n    public boolean equals(Object obj) {\r\n        if (this == obj) {\r\n            return true;\r\n        }\r\n        if (obj == null) {\r\n            return false;\r\n        }\r\n        if (getClass() != obj.getClass()) {\r\n            return false;\r\n        }\r\n        final Person other = (Person) obj;\r\n        if (!Objects.equals(this.surname, other.surname)) {\r\n            return false;\r\n        }\r\n        if (!Objects.equals(this.name, other.name)) {\r\n            return false;\r\n        }\r\n        if (!Objects.equals(this.phone, other.phone)) {\r\n            return false;\r\n        }\r\n        if (!Objects.equals(this.email, other.email)) {\r\n            return false;\r\n        }\r\n        if (!Objects.equals(this.birthday, other.birthday)) {\r\n            return false;\r\n        }\r\n        if (!Objects.equals(this.brand, other.brand)) {\r\n            return false;\r\n        }\r\n        if (!Objects.equals(this.model, other.model)) {\r\n            return false;\r\n        }\r\n        if (!Objects.equals(this.vin, other.vin)) {\r\n            return false;\r\n        }\r\n        if (!Objects.equals(this.year, other.year)) {\r\n            return false;\r\n        }\r\n        if (!Objects.equals(this.licensePlate, other.licensePlate)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/Person.java b/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/Person.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/Person.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/Person.java	(date 1641917239433)
@@ -1,15 +1,14 @@
 package com.project.infinitivus.customerbase.service.work_with_person;
 
-/**
- * @author infinitivus
- */
-
 import com.project.infinitivus.customerbase.view.output.OutputInfoPerson;
 
 import java.util.ArrayList;
 import java.util.List;
 import java.util.Objects;
 
+/**
+ * @author infinitivus
+ */
 public class Person {
 
     public static List<Person> list = new ArrayList<>();
Index: src/main/java/com/project/infinitivus/customerbase/service/work_with_person/CreatePerson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.work_with_person;\r\n\r\n\r\nimport com.project.infinitivus.customerbase.data.ChoosingStorageMethod;\r\nimport com.project.infinitivus.customerbase.view.input.InputDataPerson;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\nimport com.project.infinitivus.customerbase.view.output.OutputTable;\r\n\r\n/**\r\n * @author Infinitivus\r\n */\r\npublic class CreatePerson {\r\n    private InputDataPerson dataPerson = new InputDataPerson();\r\n    private OutputTable outputTable = new OutputTable();\r\n    private OutputMessageColumn outputMessageColumn = new OutputMessageColumn();\r\n\r\n    public void createPerson() {\r\n        String surname = dataPerson.inputData(1);\r\n        String name = dataPerson.inputData(2);\r\n        String phone = dataPerson.inputData(3);\r\n        String email = dataPerson.inputData(4);\r\n        String birthday = dataPerson.inputData(5);\r\n        String brand = dataPerson.inputData(6);\r\n        String model = dataPerson.inputData(7);\r\n        String vin = dataPerson.inputData(8);\r\n        String year = dataPerson.inputData(9);\r\n        String licensePlate = dataPerson.inputData(10);\r\n        Person.list.add(new Person(surname, name, phone, email, birthday, brand, model, vin, year, licensePlate));\r\n        threadInsert();\r\n        outputTable.longHeader();\r\n        outputTable.outputNumberPerson(Person.list.size() - 1);\r\n        outputMessageColumn.outputMessage(\"inputPerson\", 11);\r\n    }\r\n\r\n    private void threadInsert() {\r\n        new Thread(() -> {\r\n            int i = Person.list.size() - 1;\r\n            ChoosingStorageMethod.iInsert.insert(i);    /////////////////////////////////////////\r\n        }).start();\r\n    }\r\n}\r\n\r\n\r\n//    }\r\n//    private void threadInsert() {\r\n//        new Thread(() -> {\r\n//            int i = Person.list.size()-1;\r\n//            if (Settings.optionSaving.equals(\"1\")) {\r\n//                new SaveToFile().savePersonToFile(i);\r\n//            } else {\r\n//                 new SqlMethods().insertRows(i);\r\n//            }\r\n//        }\r\n//        ).start();\r\n//    }\r\n\r\n\r\n//\r\n//    PatternInputPerson patternPerson = new PatternInputPerson();\r\n//    String surName, name, phone, email, birthday, brand, model, vin, year, licensePlate;\r\n//    \r\n//    public void inputCreatePerson() {\r\n//        \r\n//        System.out.println(Localization.inputPersonArray[0]);\r\n//        do {\r\n//            surName = InputData.inputString();\r\n//        } while (!patternPerson.patternSurName(surName));\r\n//        \r\n//        System.out.println(Localization.inputPersonArray[1]);\r\n//        do {\r\n//            name = InputData.inputString();\r\n//        } while (!patternPerson.patternName(name));\r\n//        \r\n//        System.out.println(Localization.inputPersonArray[2]);\r\n//        do {\r\n//            phone = InputData.inputString();\r\n//        } while (!patternPerson.patternPhone(phone));\r\n//        \r\n//        System.out.println(Localization.inputPersonArray[3]);\r\n//        do {\r\n//            email = InputData.inputString();\r\n//        } while (!patternPerson.patternEmail(email));\r\n//        \r\n//        System.out.println(Localization.inputPersonArray[4]);\r\n//        do {\r\n//            birthday = InputData.inputString();\r\n//        } while (!patternPerson.patternBirthday(birthday));\r\n//        \r\n//        System.out.println(Localization.inputPersonArray[5]);\r\n//        do {\r\n//            brand = InputData.inputString();\r\n//        } while (!patternPerson.patternBrand(brand));\r\n//        \r\n//        System.out.println(Localization.inputPersonArray[6]);\r\n//        do {\r\n//            model = InputData.inputString();\r\n//        } while (!patternPerson.patternModel(model));\r\n//        \r\n//        System.out.println(Localization.inputPersonArray[7]);\r\n//        do {\r\n//            vin = InputData.inputString();\r\n//        } while (!patternPerson.patternVin(vin));\r\n//        \r\n//        System.out.println(Localization.inputPersonArray[8]);\r\n//        do {\r\n//            year = InputData.inputString();\r\n//        } while (!patternPerson.patternYear(year));\r\n//        \r\n//        System.out.println(Localization.inputPersonArray[9]);\r\n//        do {\r\n//            licensePlate = InputData.inputString();\r\n//        } while (!patternPerson.patternLicensePlate(licensePlate));\r\n//    }\r\n\r\n//    private void outputCreatePerson() {\r\n//        System.out.println(DODDEDLINE + \"\\n\" + Localization.message[0] + DODDEDLINE);\r\n//        System.out.format(HEADER);\r\n//        System.out.println(\"\\n\" + DODDEDLINE);\r\n//        System.out.println(Person.list.size() - 1 + \". \" + Person.list.get(Person.list.size() - 1));\r\n//        System.out.println(DODDEDLINE);\r\n//    }\r\n\r\n//    public void saveNewPerson() {\r\n//        Person inputPerson = new Person(surName, name, phone, email, birthday, brand, model, vin, year, licensePlate);\r\n//        Person.list.add(inputPerson);\r\n//    }\r\n//    \r\n//    public void mainCreatePerson() {\r\n//        inputCreatePerson();\r\n//        saveNewPerson();\r\n//        threadInsert();\r\n//        outputCreatePerson();\r\n//    }\r\n//    \r\n//    private void threadInsert() {\r\n//        new Thread(() -> {\r\n//            int i = Person.list.size()-1;\r\n//            if (Settings.optionSaving.equals(\"1\")) {\r\n//                new SaveToFile().savePersonToFile(i);\r\n//            } else {\r\n//                 new SqlMethods().insertRows(i);\r\n//            }\r\n//        } \r\n//        ).start();\r\n//    }\r\n//}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/CreatePerson.java b/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/CreatePerson.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/CreatePerson.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/CreatePerson.java	(date 1641917239285)
@@ -10,9 +10,9 @@
  * @author Infinitivus
  */
 public class CreatePerson {
-    private InputDataPerson dataPerson = new InputDataPerson();
-    private OutputTable outputTable = new OutputTable();
-    private OutputMessageColumn outputMessageColumn = new OutputMessageColumn();
+    private final InputDataPerson dataPerson = new InputDataPerson();
+    private final OutputTable outputTable = new OutputTable();
+    private final OutputMessageColumn outputMessageColumn = new OutputMessageColumn();
 
     public void createPerson() {
         String surname = dataPerson.inputData(1);
@@ -35,112 +35,7 @@
     private void threadInsert() {
         new Thread(() -> {
             int i = Person.list.size() - 1;
-            ChoosingStorageMethod.iInsert.insert(i);    /////////////////////////////////////////
+            ChoosingStorageMethod.iInsert.insert(i);
         }).start();
     }
 }
-
-
-//    }
-//    private void threadInsert() {
-//        new Thread(() -> {
-//            int i = Person.list.size()-1;
-//            if (Settings.optionSaving.equals("1")) {
-//                new SaveToFile().savePersonToFile(i);
-//            } else {
-//                 new SqlMethods().insertRows(i);
-//            }
-//        }
-//        ).start();
-//    }
-
-
-//
-//    PatternInputPerson patternPerson = new PatternInputPerson();
-//    String surName, name, phone, email, birthday, brand, model, vin, year, licensePlate;
-//    
-//    public void inputCreatePerson() {
-//        
-//        System.out.println(Localization.inputPersonArray[0]);
-//        do {
-//            surName = InputData.inputString();
-//        } while (!patternPerson.patternSurName(surName));
-//        
-//        System.out.println(Localization.inputPersonArray[1]);
-//        do {
-//            name = InputData.inputString();
-//        } while (!patternPerson.patternName(name));
-//        
-//        System.out.println(Localization.inputPersonArray[2]);
-//        do {
-//            phone = InputData.inputString();
-//        } while (!patternPerson.patternPhone(phone));
-//        
-//        System.out.println(Localization.inputPersonArray[3]);
-//        do {
-//            email = InputData.inputString();
-//        } while (!patternPerson.patternEmail(email));
-//        
-//        System.out.println(Localization.inputPersonArray[4]);
-//        do {
-//            birthday = InputData.inputString();
-//        } while (!patternPerson.patternBirthday(birthday));
-//        
-//        System.out.println(Localization.inputPersonArray[5]);
-//        do {
-//            brand = InputData.inputString();
-//        } while (!patternPerson.patternBrand(brand));
-//        
-//        System.out.println(Localization.inputPersonArray[6]);
-//        do {
-//            model = InputData.inputString();
-//        } while (!patternPerson.patternModel(model));
-//        
-//        System.out.println(Localization.inputPersonArray[7]);
-//        do {
-//            vin = InputData.inputString();
-//        } while (!patternPerson.patternVin(vin));
-//        
-//        System.out.println(Localization.inputPersonArray[8]);
-//        do {
-//            year = InputData.inputString();
-//        } while (!patternPerson.patternYear(year));
-//        
-//        System.out.println(Localization.inputPersonArray[9]);
-//        do {
-//            licensePlate = InputData.inputString();
-//        } while (!patternPerson.patternLicensePlate(licensePlate));
-//    }
-
-//    private void outputCreatePerson() {
-//        System.out.println(DODDEDLINE + "\n" + Localization.message[0] + DODDEDLINE);
-//        System.out.format(HEADER);
-//        System.out.println("\n" + DODDEDLINE);
-//        System.out.println(Person.list.size() - 1 + ". " + Person.list.get(Person.list.size() - 1));
-//        System.out.println(DODDEDLINE);
-//    }
-
-//    public void saveNewPerson() {
-//        Person inputPerson = new Person(surName, name, phone, email, birthday, brand, model, vin, year, licensePlate);
-//        Person.list.add(inputPerson);
-//    }
-//    
-//    public void mainCreatePerson() {
-//        inputCreatePerson();
-//        saveNewPerson();
-//        threadInsert();
-//        outputCreatePerson();
-//    }
-//    
-//    private void threadInsert() {
-//        new Thread(() -> {
-//            int i = Person.list.size()-1;
-//            if (Settings.optionSaving.equals("1")) {
-//                new SaveToFile().savePersonToFile(i);
-//            } else {
-//                 new SqlMethods().insertRows(i);
-//            }
-//        } 
-//        ).start();
-//    }
-//}
Index: src/main/java/com/project/infinitivus/customerbase/service/work_with_person/DeletePerson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.work_with_person;\r\n\r\nimport com.project.infinitivus.customerbase.data.ChoosingStorageMethod;\r\nimport com.project.infinitivus.customerbase.view.input.InputDeletePerson;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\n\r\n/**\r\n *\r\n * @author Infinitivus\r\n */\r\npublic class DeletePerson {\r\n    private InputDeletePerson inputDeletePerson = new InputDeletePerson();\r\n    private OutputMessageColumn outputMessageColumn = new OutputMessageColumn();\r\n\r\n    public void deletePerson() {\r\n        int personDelete = inputDeletePerson.inputDeletePerson();\r\n            Person.list.remove(personDelete);\r\n            threadInsert();\r\n            outputMessageColumn.outputMessage(\"inputDelete\", 3);\r\n    }\r\n\r\n    private void threadInsert() {\r\n        new Thread(() -> {\r\n            ChoosingStorageMethod.iDelete.delete();    /////////////////////////////////////////\r\n        }).start();\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/DeletePerson.java b/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/DeletePerson.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/DeletePerson.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/DeletePerson.java	(date 1641917239117)
@@ -9,8 +9,8 @@
  * @author Infinitivus
  */
 public class DeletePerson {
-    private InputDeletePerson inputDeletePerson = new InputDeletePerson();
-    private OutputMessageColumn outputMessageColumn = new OutputMessageColumn();
+    private final InputDeletePerson inputDeletePerson = new InputDeletePerson();
+    private final OutputMessageColumn outputMessageColumn = new OutputMessageColumn();
 
     public void deletePerson() {
         int personDelete = inputDeletePerson.inputDeletePerson();
Index: src/main/java/com/project/infinitivus/customerbase/service/work_with_person/EditPerson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.work_with_person;\r\n\r\nimport com.project.infinitivus.customerbase.data.ChoosingStorageMethod;\r\nimport com.project.infinitivus.customerbase.view.input.InputDataPerson;\r\nimport com.project.infinitivus.customerbase.view.input.InputEditPerson;\r\nimport com.project.infinitivus.customerbase.view.input.choose_from_two.IChooseFromTwo;\r\nimport com.project.infinitivus.customerbase.view.input.choose_from_two.InputYesOrNo;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\nimport com.project.infinitivus.customerbase.view.output.OutputTable;\r\n\r\n\r\n/**\r\n * @author infinitivus\r\n */\r\npublic class EditPerson {\r\n\r\n    public void editDataPerson() {\r\n        boolean continueEditPerson;\r\n       IChooseFromTwo iChooseFromTwo=new InputYesOrNo();\r\n        OutputTable outputTable=new OutputTable();\r\n        OutputMessageColumn outputMessageColumn=new OutputMessageColumn();\r\n        InputEditPerson inputEditPerson = new InputEditPerson();\r\n        InputDataPerson inputDataPerson = new InputDataPerson();\r\n        int numberPerson = inputEditPerson.inputNumberPerson(); // получаем номер редактируемой записи\r\n        do {\r\n            int numberFieldPerson = inputEditPerson.inputNumberFieldPerson(); // получаем номер редактируемого поля\r\n            String valueFieldPerson = inputDataPerson.inputData(numberFieldPerson);// получаем новое значение редактируемого поля\r\n            switch (numberFieldPerson) {\r\n                case 1:\r\n                    Person.list.get(numberPerson).setSurname(valueFieldPerson);\r\n                    break;\r\n                case 2:\r\n                    Person.list.get(numberPerson).setName(valueFieldPerson);\r\n                    break;\r\n                case 3:\r\n                    Person.list.get(numberPerson).setPhone(valueFieldPerson);\r\n                    break;\r\n                case 4:\r\n                    Person.list.get(numberPerson).setEmail(valueFieldPerson);\r\n                    break;\r\n                case 5:\r\n                    Person.list.get(numberPerson).setBirthday(valueFieldPerson);\r\n                    break;\r\n                case 6:\r\n                    Person.list.get(numberPerson).setBrand(valueFieldPerson);\r\n                    break;\r\n                case 7:\r\n                    Person.list.get(numberPerson).setModel(valueFieldPerson);\r\n                    break;\r\n                case 8:\r\n                    Person.list.get(numberPerson).setVin(valueFieldPerson);\r\n                    break;\r\n                case 9:\r\n                    Person.list.get(numberPerson).setYear(valueFieldPerson);\r\n                    break;\r\n                case 10:\r\n                    Person.list.get(numberPerson).setLicensePlate(valueFieldPerson);\r\n                    break;\r\n            }\r\n            threadInsert(numberPerson);\r\n            outputMessageColumn.outputMessage(\"inputEdit\",14); // Вывод сооющения- запись отредактирована\r\n            outputTable.longHeader();// Вывод шапки таблицы\r\n            outputTable.outputNumberPerson(numberPerson); //Вывод отредактированного Person\r\n            continueEditPerson= iChooseFromTwo.choose(\"inputEdit\",15); // boolean method(y or n)- хотите далее редактировать эту запись?\r\n        }while(continueEditPerson);\r\n    }\r\n\r\n    private void threadInsert(int numberPerson) {\r\n        new Thread(() -> {\r\n            ChoosingStorageMethod.iUpdate.update(numberPerson);   /////////////////////////////////////////\r\n        }).start();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/EditPerson.java b/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/EditPerson.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/EditPerson.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/EditPerson.java	(date 1641917239394)
@@ -8,7 +8,6 @@
 import com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;
 import com.project.infinitivus.customerbase.view.output.OutputTable;
 
-
 /**
  * @author infinitivus
  */
Index: src/main/java/com/project/infinitivus/customerbase/service/work_with_person/RegexInputPerson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.service.work_with_person;\r\n\r\n/**\r\n *\r\n * @author infinitivus\r\n */\r\npublic class RegexInputPerson {\r\n\r\n    public boolean regexSurName(String surName) {\r\n        return  surName.matches(\"^([А-Яа-яЁё]|[A-Za-z]){3,15}$\");\r\n    }\r\n\r\n    public boolean regexName(String name) {return name.matches(\"^[A-Za-zА-Яа-яёЁ]{3,15}\\\\s?([A-Za-zА-Яа-яёЁ]{3,15})?$\"); }\r\n\r\n    public boolean regexPhone(String phone) { return phone.matches(\"^((8|\\\\+7)[\\\\- ]?)?(\\\\(?\\\\d{3}\\\\)?[\\\\- ]?)?[\\\\d\\\\- ]{7,10}$\"); }\r\n\r\n    public boolean regexEmail(String email) { return email.matches(\"^(\\\\w+@\\\\w+\\\\.(com|ru))?$\"); }\r\n\r\n    public boolean regexBirthday(String birthday) { return  birthday.matches(\"^((0?[1-9]|[12][0-9]|3[01])\\\\.(0?[1-9]|1[012])\\\\.((19|20)\\\\d\\\\d))?$\");}\r\n\r\n    public boolean regexBrand(String brand) { return brand.matches(\"^([A-Za-zА-Яа-яёЁ]{3,10}\\\\s?([A-Za-zА-Яа-яёЁ]{3,10})?)?$\");}\r\n\r\n    public boolean regexModel(String model) { return model.matches(\"^([A-Za-zА-Яа-яёЁ]{3,10}\\\\s?([A-Za-zА-Яа-яёЁ]{3,10})?)?$\");}\r\n\r\n    public boolean regexVin(String vin) { return vin.matches(\"^([a-zA-Z0-9]{15,30})?$\");}\r\n\r\n    public boolean regexYear(String year) { return year.matches(\"^((19|20)[0-9][0-9])?$\");}\r\n\r\n    public boolean regexLicensePlate(String licensePlate) { return licensePlate.matches(\"^([a-zA-Z0-9А-Яа-я]{3,10})?$\");}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/RegexInputPerson.java b/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/RegexInputPerson.java
--- a/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/RegexInputPerson.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/service/work_with_person/RegexInputPerson.java	(date 1641919601428)
@@ -1,7 +1,6 @@
 package com.project.infinitivus.customerbase.service.work_with_person;
 
 /**
- *
  * @author infinitivus
  */
 public class RegexInputPerson {
Index: src/main/java/com/project/infinitivus/customerbase/view/input/InputEditPerson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.view.input;\r\n\r\nimport com.project.infinitivus.customerbase.service.work_with_person.Person;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\nimport com.project.infinitivus.customerbase.view.output.OutputTable;\r\n\r\npublic class InputEditPerson {\r\n    private OutputMessageColumn outputMessageColumn = new OutputMessageColumn();\r\n    private InputInt inputInt = new InputInt();\r\n\r\n\r\n    public int inputNumberPerson() {\r\n        OutputTable outputTable = new OutputTable();\r\n        do {\r\n            outputMessageColumn.outputMessage(\"inputEdit\", 1);\r\n            int numberEditPerson = inputInt.inputInt();\r\n            if (numberEditPerson > 0 && numberEditPerson < Person.list.size()) {\r\n                outputTable.longHeader();\r\n                outputTable.outputNumberPerson(numberEditPerson);\r\n                return numberEditPerson;\r\n            } else {\r\n                outputMessageColumn.outputMessage(\"errorInputOutput\", 2);\r\n            }\r\n        } while (true);\r\n    }\r\n\r\n    public int inputNumberFieldPerson() {\r\n        do {\r\n            for (int i = 3; i < 13; i++) {\r\n                outputMessageColumn.outputMessage(\"inputEdit\", i);\r\n            }\r\n            outputMessageColumn.outputMessage(\"inputEdit\", 2);\r\n            int numberFieldPerson = inputInt.inputInt();\r\n            if (numberFieldPerson > 0 && numberFieldPerson < 11) {\r\n                return numberFieldPerson;\r\n            } else {\r\n                outputMessageColumn.outputMessage(\"errorInputOutput\", 2);\r\n            }\r\n        } while (true);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/view/input/InputEditPerson.java b/src/main/java/com/project/infinitivus/customerbase/view/input/InputEditPerson.java
--- a/src/main/java/com/project/infinitivus/customerbase/view/input/InputEditPerson.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/view/input/InputEditPerson.java	(date 1641919601294)
@@ -4,9 +4,12 @@
 import com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;
 import com.project.infinitivus.customerbase.view.output.OutputTable;
 
+/**
+ * @author infinitivus
+ */
 public class InputEditPerson {
-    private OutputMessageColumn outputMessageColumn = new OutputMessageColumn();
-    private InputInt inputInt = new InputInt();
+    private final OutputMessageColumn outputMessageColumn = new OutputMessageColumn();
+    private final InputInt inputInt = new InputInt();
 
 
     public int inputNumberPerson() {
Index: src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/InputOneOrTwo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.view.input.choose_from_two;\r\n\r\nimport com.project.infinitivus.customerbase.view.input.InputString;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\n\r\npublic class InputOneOrTwo implements IChooseFromTwo {\r\n    private InputString inputString = new InputString();\r\n    private OutputMessageColumn messageColumn = new OutputMessageColumn();\r\n    private OutputMessageColumn outputMessageColumn = new OutputMessageColumn();\r\n\r\n    @Override\r\n    public boolean choose(String key, int value) {\r\n        String chooseNumber;\r\n        do {\r\n            messageColumn.outputMessage(key, value); // выберете 1 или 2\r\n            chooseNumber = inputString.inputString();\r\n            if (chooseNumber.equals(\"1\")) {\r\n                return true;\r\n            } else if (chooseNumber.equals(\"2\")) {\r\n                return false;\r\n            } else {\r\n                outputMessageColumn.outputMessage(\"errorInputOutput\", 4);\r\n            }\r\n        } while (true);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/InputOneOrTwo.java b/src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/InputOneOrTwo.java
--- a/src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/InputOneOrTwo.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/view/input/choose_from_two/InputOneOrTwo.java	(date 1641919601473)
@@ -4,9 +4,9 @@
 import com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;
 
 public class InputOneOrTwo implements IChooseFromTwo {
-    private InputString inputString = new InputString();
-    private OutputMessageColumn messageColumn = new OutputMessageColumn();
-    private OutputMessageColumn outputMessageColumn = new OutputMessageColumn();
+    private final InputString inputString = new InputString();
+    private final OutputMessageColumn messageColumn = new OutputMessageColumn();
+    private final OutputMessageColumn outputMessageColumn = new OutputMessageColumn();
 
     @Override
     public boolean choose(String key, int value) {
Index: src/main/java/com/project/infinitivus/customerbase/view/input/menu/InputMainMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.view.input.menu;\r\n\r\nimport com.project.infinitivus.customerbase.view.input.InputInt;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.IOutputMessage;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\n\r\npublic class InputMainMenu {\r\n\r\n    public int inputNumberMenu() {\r\n        IOutputMessage mainMenu = new OutputMessageColumn();\r\n        do {\r\n            mainMenu.outputMessage(\"mainMenu\", 12);\r\n            for (int i = 1; i <= 11; i++) {\r\n                mainMenu.outputMessage(\"mainMenu\", i);\r\n            }\r\n            int inputNumberMenu = new InputInt().inputInt();\r\n            if (inputNumberMenu >= 0 && inputNumberMenu <= 9) {\r\n                return inputNumberMenu;\r\n            } else {\r\n                mainMenu.outputMessage(\"mainMenu\", 13);\r\n            }\r\n        } while (true);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/view/input/menu/InputMainMenu.java b/src/main/java/com/project/infinitivus/customerbase/view/input/menu/InputMainMenu.java
--- a/src/main/java/com/project/infinitivus/customerbase/view/input/menu/InputMainMenu.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/view/input/menu/InputMainMenu.java	(date 1641919601367)
@@ -4,6 +4,9 @@
 import com.project.infinitivus.customerbase.view.output.OutputMessage.IOutputMessage;
 import com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;
 
+/**
+ * @author infinitivus
+ */
 public class InputMainMenu {
 
     public int inputNumberMenu() {
Index: src/main/java/com/project/infinitivus/customerbase/view/input/menu/MenuSettingDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.view.input.menu;\r\n\r\nimport com.project.infinitivus.customerbase.view.input.InputString;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.IOutputMessage;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\n\r\n/**\r\n * @author infinitivus\r\n */\r\npublic class MenuSettingDB {\r\n    private IOutputMessage iOutputMessage = new OutputMessageColumn();\r\n    private InputString input = new InputString();\r\n\r\n    public String typeDB(String keyMessage,int valueMessage) {\r\n        String dbType;\r\n        do {\r\n            iOutputMessage.outputMessage(\"settingDB\", 1);\r\n            dbType = input.inputString();\r\n            if (!(dbType.equals(\"1\") || dbType.equals(\"2\"))) {\r\n                iOutputMessage.outputMessage(\"settingDB\", 7);\r\n            }\r\n        } while (!(dbType.equals(\"1\") || dbType.equals(\"2\")));\r\n        return dbType;\r\n    }\r\n\r\n    public String settingDB(String keyMessage, int valueMessage) {\r\n        iOutputMessage.outputMessage(keyMessage, valueMessage);\r\n        return input.inputString();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/view/input/menu/MenuSettingDB.java b/src/main/java/com/project/infinitivus/customerbase/view/input/menu/MenuSettingDB.java
--- a/src/main/java/com/project/infinitivus/customerbase/view/input/menu/MenuSettingDB.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/view/input/menu/MenuSettingDB.java	(date 1641919601304)
@@ -8,8 +8,8 @@
  * @author infinitivus
  */
 public class MenuSettingDB {
-    private IOutputMessage iOutputMessage = new OutputMessageColumn();
-    private InputString input = new InputString();
+    private final IOutputMessage iOutputMessage = new OutputMessageColumn();
+    private final InputString input = new InputString();
 
     public String typeDB(String keyMessage,int valueMessage) {
         String dbType;
Index: src/main/java/com/project/infinitivus/customerbase/view/input/InputDataPerson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\npackage com.project.infinitivus.customerbase.view.input;\r\n\r\nimport com.project.infinitivus.customerbase.service.work_with_person.RegexInputPerson;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.IOutputMessage;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\n\r\n/**\r\n * @author aals\r\n */\r\npublic class InputDataPerson {\r\n    private boolean verificationResult;\r\n\r\n    public String inputData(int numberField) {\r\n        InputString input = new InputString();\r\n        RegexInputPerson regexInputPerson = new RegexInputPerson();\r\n        IOutputMessage inputPerson = new OutputMessageColumn();\r\n        String fieldValue;\r\n        do {\r\n            inputPerson.outputMessage(\"inputPerson\", numberField);\r\n            fieldValue = input.inputString();\r\n            switch (numberField) {\r\n                case 1:\r\n                    verificationResult = regexInputPerson.regexSurName(fieldValue);\r\n                    break;\r\n                case 2:\r\n                    verificationResult = regexInputPerson.regexName(fieldValue);\r\n                    break;\r\n                case 3:\r\n                    verificationResult = regexInputPerson.regexPhone(fieldValue);\r\n                    break;\r\n                case 4:\r\n                    verificationResult = regexInputPerson.regexEmail(fieldValue);\r\n                    break;\r\n                case 5:\r\n                    verificationResult = regexInputPerson.regexBirthday(fieldValue);\r\n                    break;\r\n                case 6:\r\n                    verificationResult = regexInputPerson.regexBrand(fieldValue);\r\n                    break;\r\n                case 7:\r\n                    verificationResult = regexInputPerson.regexModel(fieldValue);\r\n                    break;\r\n                case 8:\r\n                    verificationResult = regexInputPerson.regexVin(fieldValue);\r\n                    break;\r\n                case 9:\r\n                    verificationResult = regexInputPerson.regexYear(fieldValue);\r\n                    break;\r\n                case 10:\r\n                    verificationResult = regexInputPerson.regexLicensePlate(fieldValue);\r\n                    break;\r\n            }\r\n            if (!verificationResult) {\r\n                inputPerson.outputMessage(\"errorInputPerson\", 1);\r\n            }\r\n        } while (!verificationResult);\r\n        return fieldValue;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/view/input/InputDataPerson.java b/src/main/java/com/project/infinitivus/customerbase/view/input/InputDataPerson.java
--- a/src/main/java/com/project/infinitivus/customerbase/view/input/InputDataPerson.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/view/input/InputDataPerson.java	(date 1641919601449)
@@ -6,7 +6,7 @@
 import com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;
 
 /**
- * @author aals
+ * @author infinitivus
  */
 public class InputDataPerson {
     private boolean verificationResult;
Index: src/main/java/com/project/infinitivus/customerbase/view/input/InputDeletePerson.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.view.input;\r\n\r\nimport com.project.infinitivus.customerbase.service.work_with_person.Person;\r\nimport com.project.infinitivus.customerbase.view.input.choose_from_two.IChooseFromTwo;\r\nimport com.project.infinitivus.customerbase.view.input.choose_from_two.InputYesOrNo;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\nimport com.project.infinitivus.customerbase.view.output.OutputTable;\r\n\r\npublic class InputDeletePerson {\r\n    private InputInt numberDeletePerson = new InputInt();\r\n    private OutputMessageColumn outputMessageColumn = new OutputMessageColumn();\r\n    private IChooseFromTwo chooseDelete = new InputYesOrNo();\r\n    private OutputTable outputTable = new OutputTable();\r\n\r\n    public int inputDeletePerson() {\r\n        int numberDelete;\r\n        boolean outDelete = true;\r\n        do {\r\n            outputMessageColumn.outputMessage(\"inputDelete\", 1);\r\n            numberDelete = numberDeletePerson.inputInt();\r\n            if (numberDelete > 0 && numberDelete < Person.list.size()) {\r\n                outDelete = false;\r\n            } else {\r\n                outputMessageColumn.outputMessage(\"errorInputOutput\",2);\r\n            }\r\n        } while (outDelete);\r\n        outputTable.longHeader();\r\n        outputTable.outputNumberPerson(numberDelete);\r\n        boolean result = chooseDelete.choose(\"inputDelete\", 2);\r\n        if (result) {\r\n            return numberDelete;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/view/input/InputDeletePerson.java b/src/main/java/com/project/infinitivus/customerbase/view/input/InputDeletePerson.java
--- a/src/main/java/com/project/infinitivus/customerbase/view/input/InputDeletePerson.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/view/input/InputDeletePerson.java	(date 1641919601357)
@@ -6,11 +6,14 @@
 import com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;
 import com.project.infinitivus.customerbase.view.output.OutputTable;
 
+/**
+ * @author infinitivus
+ */
 public class InputDeletePerson {
-    private InputInt numberDeletePerson = new InputInt();
-    private OutputMessageColumn outputMessageColumn = new OutputMessageColumn();
-    private IChooseFromTwo chooseDelete = new InputYesOrNo();
-    private OutputTable outputTable = new OutputTable();
+    private final InputInt numberDeletePerson = new InputInt();
+    private final OutputMessageColumn outputMessageColumn = new OutputMessageColumn();
+    private final IChooseFromTwo chooseDelete = new InputYesOrNo();
+    private final OutputTable outputTable = new OutputTable();
 
     public int inputDeletePerson() {
         int numberDelete;
Index: src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/IConnect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.data_base.connect;\r\n\r\nimport java.sql.Connection;\r\n\r\npublic interface IConnect {\r\n    Connection connect();\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/IConnect.java b/src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/IConnect.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/IConnect.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/data_base/connect/IConnect.java	(date 1641921238494)
@@ -2,6 +2,9 @@
 
 import java.sql.Connection;
 
+/**
+ * @author infinitivus
+ */
 public interface IConnect {
     Connection connect();
 }
Index: src/main/java/com/project/infinitivus/customerbase/data/data_base/ApplySettingDB.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.data_base;\r\n\r\nimport com.project.infinitivus.customerbase.data.data_base.connect.MySqlConnect;\r\nimport com.project.infinitivus.customerbase.data.data_base.connect.PostgreSqlConnect;\r\nimport com.project.infinitivus.customerbase.data.data_base.connect.IConnect;\r\n\r\npublic class ApplySettingDB {\r\n    static IConnect iSqlConnect;\r\n    private static String dbType;\r\n    public static String dbPath;\r\n    public static String dbLogin;\r\n    public static String dbPassword;\r\n    static String tableName;\r\n\r\n    public ApplySettingDB(String dbType, String dbPath, String dbLogin, String dbPassword, String tableName) {\r\n        ApplySettingDB.dbType = dbType;\r\n        ApplySettingDB.dbPath = dbPath;\r\n        ApplySettingDB.dbLogin = dbLogin;\r\n        ApplySettingDB.dbPassword = dbPassword;\r\n        ApplySettingDB.tableName = tableName;\r\n        iSqlConnect = selectDB();\r\n    }\r\n\r\n    private IConnect selectDB() {\r\n        if (dbType.equals(\"1\")) {\r\n            iSqlConnect = new MySqlConnect();\r\n        } else {\r\n            iSqlConnect = new PostgreSqlConnect();\r\n        }\r\n        return iSqlConnect;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/data_base/ApplySettingDB.java b/src/main/java/com/project/infinitivus/customerbase/data/data_base/ApplySettingDB.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/data_base/ApplySettingDB.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/data_base/ApplySettingDB.java	(date 1641921238461)
@@ -4,6 +4,9 @@
 import com.project.infinitivus.customerbase.data.data_base.connect.PostgreSqlConnect;
 import com.project.infinitivus.customerbase.data.data_base.connect.IConnect;
 
+/**
+ * @author infinitivus
+ */
 public class ApplySettingDB {
     static IConnect iSqlConnect;
     private static String dbType;
Index: src/main/java/com/project/infinitivus/customerbase/data/data_base/SelectData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.data_base;\r\n\r\nimport com.project.infinitivus.customerbase.data.ISelect;\r\nimport com.project.infinitivus.customerbase.service.work_with_person.Person;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class SelectData implements ISelect {\r\n    private Connection dbConnection = null;\r\n    private Statement statement = null;\r\n\r\n    @Override\r\n    public void select() {\r\n        try {\r\n            dbConnection = ApplySettingDB.iSqlConnect.connect();\r\n            statement = dbConnection.createStatement();\r\n            ResultSet rs = statement.executeQuery(\"SELECT * FROM \" + ApplySettingDB.tableName + \" ORDER BY id ASC\");\r\n            while (rs.next()) {\r\n                String surName = rs.getString(\"SURNAME\");\r\n                String name = rs.getString(\"NAME\");\r\n                String phone = rs.getString(\"PHONE\");\r\n                String email = rs.getString(\"EMAIL\");\r\n                String birthday = rs.getString(\"BIRTHDAY\");\r\n                String brand = rs.getString(\"BRAND\");\r\n                String model = rs.getString(\"MODEL\");\r\n                String vin = rs.getString(\"VIN\");\r\n                String year = rs.getString(\"YEAR\");\r\n                String licensePlate = rs.getString(\"LICENSEPLATE\");\r\n                Person.list.add( new Person(surName, name, phone, email, birthday, brand, model, vin, year, licensePlate));\r\n            }\r\n        } catch (SQLException e) {\r\n            Logger.getLogger(SelectData.class.getName()).log(Level.SEVERE, null, e);\r\n        } finally {\r\n            if (statement != null) {\r\n                try {\r\n                    statement.close();\r\n                } catch (SQLException ex) {\r\n                    Logger.getLogger(SelectData.class.getName()).log(Level.SEVERE, null, ex);\r\n                }\r\n            }\r\n            if (dbConnection != null) {\r\n                try {\r\n                    dbConnection.close();\r\n                } catch (SQLException ex) {\r\n                    Logger.getLogger(SelectData.class.getName()).log(Level.SEVERE, null, ex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/data_base/SelectData.java b/src/main/java/com/project/infinitivus/customerbase/data/data_base/SelectData.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/data_base/SelectData.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/data_base/SelectData.java	(date 1641921238441)
@@ -10,6 +10,9 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
 public class SelectData implements ISelect {
     private Connection dbConnection = null;
     private Statement statement = null;
Index: src/main/java/com/project/infinitivus/customerbase/data/data_base/ClearData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.data_base;\r\n\r\nimport com.project.infinitivus.customerbase.data.IClear;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class ClearData implements IClear {\r\n    private Connection dbConnection = null;\r\n    private Statement statement = null;\r\n\r\n    @Override\r\n    public void clear() {\r\n\r\n        try {\r\n            dbConnection = ApplySettingDB.iSqlConnect.connect();\r\n            statement = dbConnection.createStatement();\r\n            String sql = \"TRUNCATE TABLE \" +ApplySettingDB.tableName  + \";\";\r\n            statement.executeUpdate(sql);\r\n        } catch (SQLException ex) {\r\n            Logger.getLogger(ClearData.class.getName()).log(Level.SEVERE, null, ex);\r\n        } finally {\r\n\r\n            if (statement != null) {\r\n                try {\r\n                    statement.close();\r\n                } catch (SQLException ex) {\r\n                    Logger.getLogger(ClearData.class.getName()).log(Level.SEVERE, null, ex);\r\n                }\r\n            }\r\n            if (dbConnection != null) {\r\n                try {\r\n                    dbConnection.close();\r\n                } catch (SQLException ex) {\r\n                    Logger.getLogger(ClearData.class.getName()).log(Level.SEVERE, null, ex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/data_base/ClearData.java b/src/main/java/com/project/infinitivus/customerbase/data/data_base/ClearData.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/data_base/ClearData.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/data_base/ClearData.java	(date 1641921238473)
@@ -8,6 +8,9 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
 public class ClearData implements IClear {
     private Connection dbConnection = null;
     private Statement statement = null;
Index: src/main/java/com/project/infinitivus/customerbase/data/data_base/CreateSchemaAndTable.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.data_base;\r\n\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.IOutputMessage;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;\r\nimport com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageLine;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class CreateSchemaAndTable {\r\n    private Connection dbConnection = null;\r\n    private Statement statement = null;\r\n    private IOutputMessage iOutputMessage = new OutputMessageColumn();\r\n    private String sql;\r\n\r\n    public void createSchema(String dbName) {\r\n        try {\r\n            iOutputMessage.outputMessage(\"connectivityDB\", 1);\r\n            dbConnection = ApplySettingDB.iSqlConnect.connect(); /////////////////////////////////////////\r\n            statement = dbConnection.createStatement();\r\n             sql = \"CREATE DATABASE \" + dbName;\r\n            statement.executeUpdate(sql);\r\n            iOutputMessage.outputMessage(\"connectivityDB\", 2);\r\n        } catch (SQLException ex) {\r\n            Logger.getLogger(CreateSchemaAndTable.class.getName()).log(Level.SEVERE, null, ex);\r\n        } finally {\r\n            closeConnect();\r\n        }\r\n    }\r\n\r\n    public void createTable() {\r\n        try {\r\n            iOutputMessage.outputMessage(\"connectivityDB\", 3);\r\n\r\n            dbConnection = ApplySettingDB.iSqlConnect.connect(); //////////////////////////////////////////////\r\n            sql = \"CREATE TABLE \" + ApplySettingDB.tableName ///////////////////////////////////////\r\n                    + \"(id INT NOT NULL , \"\r\n                    + \" SURNAME VARCHAR(15) NOT NULL, \"\r\n                    + \" NAME VARCHAR(31) NOT NULL, \"\r\n                    + \" PHONE VARCHAR(15) NOT NULL, \"\r\n                    + \" EMAIL VARCHAR (20), \"\r\n                    + \" BIRTHDAY VARCHAR(10), \"\r\n                    + \" BRAND VARCHAR(20), \"\r\n                    + \" MODEL VARCHAR(20), \"\r\n                    + \" VIN VARCHAR(30), \"\r\n                    + \" YEAR VARCHAR (4), \"\r\n                    + \" LICENSEPLATE VARCHAR(10)) \";\r\n            statement = dbConnection.createStatement();\r\n            statement.executeUpdate(sql);\r\n            iOutputMessage.outputMessage(\"connectivityDB\", 4);\r\n//\r\n        } catch (SQLException ex) {\r\n            Logger.getLogger(CreateSchemaAndTable.class.getName()).log(Level.SEVERE, null, ex);\r\n        } finally {\r\n            closeConnect();\r\n        }\r\n    }\r\n\r\n    private void closeConnect() {\r\n        if (statement != null) {\r\n            try {\r\n                statement.close();\r\n            } catch (SQLException ex) {\r\n                Logger.getLogger(CreateSchemaAndTable.class.getName()).log(Level.SEVERE, null, ex);\r\n            }\r\n        }\r\n        if (dbConnection != null) {\r\n            try {\r\n                dbConnection.close();\r\n            } catch (SQLException ex) {\r\n                Logger.getLogger(CreateSchemaAndTable.class.getName()).log(Level.SEVERE, null, ex);\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/data_base/CreateSchemaAndTable.java b/src/main/java/com/project/infinitivus/customerbase/data/data_base/CreateSchemaAndTable.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/data_base/CreateSchemaAndTable.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/data_base/CreateSchemaAndTable.java	(date 1641921238281)
@@ -2,7 +2,6 @@
 
 import com.project.infinitivus.customerbase.view.output.OutputMessage.IOutputMessage;
 import com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageColumn;
-import com.project.infinitivus.customerbase.view.output.OutputMessage.OutputMessageLine;
 
 import java.sql.Connection;
 import java.sql.SQLException;
@@ -10,10 +9,13 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
 public class CreateSchemaAndTable {
     private Connection dbConnection = null;
     private Statement statement = null;
-    private IOutputMessage iOutputMessage = new OutputMessageColumn();
+    private final IOutputMessage iOutputMessage = new OutputMessageColumn();
     private String sql;
 
     public void createSchema(String dbName) {
Index: src/main/java/com/project/infinitivus/customerbase/data/data_base/UpdateData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.data_base;\r\n\r\nimport com.project.infinitivus.customerbase.data.IUpdate;\r\nimport com.project.infinitivus.customerbase.service.work_with_person.Person;\r\n\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class UpdateData implements IUpdate {\r\n    private Connection dbConnection = null;\r\n    private Statement statement = null;\r\n\r\n    @Override\r\n    public void update(int i) {\r\n        try {\r\n            dbConnection = ApplySettingDB.iSqlConnect.connect();\r\n            String sql = \"UPDATE \" + ApplySettingDB.tableName + \" SET SURNAME=?, NAME=? \"\r\n                    + \",PHONE=? ,EMAIL=? ,BIRTHDAY=? ,BRAND=? ,MODEL=? ,VIN=? ,YEAR=? ,LICENSEPLATE=? WHERE ID=\" + i;\r\n            PreparedStatement preparedStatement = dbConnection.prepareStatement(sql);\r\n            preparedStatement.setString(1, Person.list.get(i).getSurname());\r\n            preparedStatement.setString(2, Person.list.get(i).getName());\r\n            preparedStatement.setString(3, Person.list.get(i).getPhone());\r\n            preparedStatement.setString(4, Person.list.get(i).getEmail());\r\n            preparedStatement.setString(5, Person.list.get(i).getBirthday());\r\n            preparedStatement.setString(6, Person.list.get(i).getBrand());\r\n            preparedStatement.setString(7, Person.list.get(i).getModel());\r\n            preparedStatement.setString(8, Person.list.get(i).getVin());\r\n            preparedStatement.setString(9, Person.list.get(i).getYear());\r\n            preparedStatement.setString(10, Person.list.get(i).getLicensePlate());\r\n            preparedStatement.addBatch();\r\n            preparedStatement.executeBatch();\r\n        } catch (SQLException ex) {\r\n            Logger.getLogger(UpdateData.class.getName()).log(Level.SEVERE, null, ex);\r\n        } finally {\r\n            if (statement != null) {\r\n                try {\r\n                    statement.close();\r\n                } catch (SQLException ex) {\r\n                    Logger.getLogger(UpdateData.class.getName()).log(Level.SEVERE, null, ex);\r\n                }\r\n            }\r\n            if (dbConnection != null) {\r\n                try {\r\n                    dbConnection.close();\r\n                } catch (SQLException ex) {\r\n                    Logger.getLogger(UpdateData.class.getName()).log(Level.SEVERE, null, ex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/data_base/UpdateData.java b/src/main/java/com/project/infinitivus/customerbase/data/data_base/UpdateData.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/data_base/UpdateData.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/data_base/UpdateData.java	(date 1641921238408)
@@ -11,9 +11,12 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
 public class UpdateData implements IUpdate {
     private Connection dbConnection = null;
-    private Statement statement = null;
+    private final Statement statement = null;
 
     @Override
     public void update(int i) {
Index: src/main/java/com/project/infinitivus/customerbase/data/data_base/DeleteData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.data_base;\r\n\r\nimport com.project.infinitivus.customerbase.data.IDelete;\r\nimport com.project.infinitivus.customerbase.service.work_with_person.Person;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class DeleteData implements IDelete {\r\n    private Connection dbConnection = null;\r\n    private Statement statement = null;\r\n\r\n    @Override\r\n    public void delete() {\r\n        InsertData insertData=new InsertData();\r\n        try {\r\n            dbConnection = ApplySettingDB.iSqlConnect.connect();\r\n            statement = dbConnection.createStatement();\r\n            statement.executeUpdate(\"DELETE FROM \" + ApplySettingDB.tableName );\r\n            for(int i=1;i< Person.list.size();i++){ \r\n                insertData.insert(i);\r\n            }\r\n        } catch (SQLException ex) {\r\n            Logger.getLogger(DeleteData.class.getName()).log(Level.SEVERE, null, ex);\r\n        } finally {\r\n            if (statement != null) {\r\n                try {\r\n                    statement.close();\r\n                } catch (SQLException ex) {\r\n                    Logger.getLogger(DeleteData.class.getName()).log(Level.SEVERE, null, ex);\r\n                }\r\n            }\r\n            if (dbConnection != null) {\r\n                try {\r\n                    dbConnection.close();\r\n                } catch (SQLException ex) {\r\n                    Logger.getLogger(DeleteData.class.getName()).log(Level.SEVERE, null, ex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/data_base/DeleteData.java b/src/main/java/com/project/infinitivus/customerbase/data/data_base/DeleteData.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/data_base/DeleteData.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/data_base/DeleteData.java	(date 1641921238485)
@@ -9,6 +9,9 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
 public class DeleteData implements IDelete {
     private Connection dbConnection = null;
     private Statement statement = null;
Index: src/main/java/com/project/infinitivus/customerbase/data/data_base/InsertData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.data_base;\r\n\r\nimport com.project.infinitivus.customerbase.data.IInsert;\r\nimport com.project.infinitivus.customerbase.service.work_with_person.Person;\r\n\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.SQLException;\r\nimport java.sql.Statement;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class InsertData implements IInsert {\r\n    private Connection dbConnection = null;\r\n    private Statement statement = null;\r\n\r\n    @Override\r\n    public void insert(int i) {\r\n        try {\r\n            dbConnection = ApplySettingDB.iSqlConnect.connect();\r\n            String sql = \"INSERT INTO \" + ApplySettingDB.tableName + \"(ID ,SURNAME, NAME ,PHONE ,EMAIL ,BIRTHDAY ,BRAND ,MODEL ,VIN ,YEAR ,LICENSEPLATE)\"\r\n                    + \" VALUES(?,?,?,?,?,?,?,?,?,?,?)\";\r\n            PreparedStatement preparedStatement = dbConnection.prepareStatement(sql);\r\n            preparedStatement.setInt(1, i);\r\n            preparedStatement.setString(2, Person.list.get(i).getSurname());\r\n            preparedStatement.setString(3, Person.list.get(i).getName());\r\n            preparedStatement.setString(4, Person.list.get(i).getPhone());\r\n            preparedStatement.setString(5, Person.list.get(i).getEmail());\r\n            preparedStatement.setString(6, Person.list.get(i).getBirthday());\r\n            preparedStatement.setString(7, Person.list.get(i).getBrand());\r\n            preparedStatement.setString(8, Person.list.get(i).getModel());\r\n            preparedStatement.setString(9, Person.list.get(i).getVin());\r\n            preparedStatement.setString(10, Person.list.get(i).getYear());\r\n            preparedStatement.setString(11, Person.list.get(i).getLicensePlate());\r\n            preparedStatement.executeUpdate();\r\n        } catch (SQLException e) {\r\n            Logger.getLogger(InsertData.class.getName()).log(Level.SEVERE, null, e);\r\n        } finally {\r\n            if (statement != null) {\r\n                try {\r\n                    statement.close();\r\n                } catch (SQLException ex) {\r\n                    Logger.getLogger(InsertData.class.getName()).log(Level.SEVERE, null, ex);\r\n                }\r\n            }\r\n            if (dbConnection != null) {\r\n                try {\r\n                    dbConnection.close();\r\n                } catch (SQLException ex) {\r\n                    Logger.getLogger(InsertData.class.getName()).log(Level.SEVERE, null, ex);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/data_base/InsertData.java b/src/main/java/com/project/infinitivus/customerbase/data/data_base/InsertData.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/data_base/InsertData.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/data_base/InsertData.java	(date 1641921238155)
@@ -10,9 +10,12 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
 public class InsertData implements IInsert {
     private Connection dbConnection = null;
-    private Statement statement = null;
+    private final Statement statement = null;
 
     @Override
     public void insert(int i) {
Index: src/main/java/com/project/infinitivus/customerbase/data/file/ClearFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.infinitivus.customerbase.data.file;\r\n\r\nimport com.project.infinitivus.customerbase.data.IClear;\r\n\r\nimport java.io.IOException;\r\nimport java.nio.channels.FileChannel;\r\nimport java.nio.file.Paths;\r\nimport java.nio.file.StandardOpenOption;\r\nimport java.util.logging.Level;\r\nimport java.util.logging.Logger;\r\n\r\npublic class ClearFile extends CreateDirectoryAndFile implements IClear {\r\n\r\n    public void clear() {\r\n        try {\r\n            FileChannel.open(Paths.get(PERSON_LIBRARY_LINE), StandardOpenOption.WRITE).truncate(0).close();\r\n        } catch (IOException ex) {\r\n            Logger.getLogger(ClearFile.class.getName()).log(Level.SEVERE, null, ex);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/project/infinitivus/customerbase/data/file/ClearFile.java b/src/main/java/com/project/infinitivus/customerbase/data/file/ClearFile.java
--- a/src/main/java/com/project/infinitivus/customerbase/data/file/ClearFile.java	(revision e6a6c7c65ab9176c6c2b7ab2fb20d4480de44867)
+++ b/src/main/java/com/project/infinitivus/customerbase/data/file/ClearFile.java	(date 1641921238377)
@@ -9,6 +9,9 @@
 import java.util.logging.Level;
 import java.util.logging.Logger;
 
+/**
+ * @author infinitivus
+ */
 public class ClearFile extends CreateDirectoryAndFile implements IClear {
 
     public void clear() {
